{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\nvar _require = require('mongodb'),\n  MongoClient = _require.MongoClient;\nvar checkUserInDatabase = function checkUserInDatabase(username, email) {\n  var uri, client, database, collection, result;\n  return _regeneratorRuntime.async(function checkUserInDatabase$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        uri = 'mongodb://localhost:27017';\n        client = new MongoClient(uri);\n        _context.next = 5;\n        return _regeneratorRuntime.awrap(client.connect());\n      case 5:\n        database = client.db('myDatabase');\n        collection = database.collection('volunteers');\n        _context.next = 9;\n        return _regeneratorRuntime.awrap(collection.findOne({\n          username: username,\n          email: email\n        }));\n      case 9:\n        result = _context.sent;\n        client.close();\n        return _context.abrupt(\"return\", !!result);\n      case 14:\n        _context.prev = 14;\n        _context.t0 = _context[\"catch\"](0);\n        console.error('Error connecting to database:', _context.t0);\n        return _context.abrupt(\"return\", false);\n      case 18:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, [[0, 14]], Promise);\n};\nmodule.exports = {\n  checkUserInDatabase: checkUserInDatabase\n};","map":{"version":3,"names":["_require","require","MongoClient","checkUserInDatabase","username","email","uri","client","database","collection","result","_regeneratorRuntime","async","checkUserInDatabase$","_context","prev","next","awrap","connect","db","findOne","sent","close","abrupt","t0","console","error","stop","Promise","module","exports"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/checkUserInDatabase.js"],"sourcesContent":["const { MongoClient } = require('mongodb');\r\n\r\n// פונקציה לחיבור למסד הנתונים MongoDB ובדיקה בטבלה \"volunteers\"\r\nconst checkUserInDatabase = async (username, email) => {\r\n  try {\r\n    // מחרוזת יחידת התקשורת של מסד הנתונים (URI)\r\n    const uri = 'mongodb://localhost:27017';\r\n\r\n    // יצירת מחלקת הלקוח והתחברות למסד הנתונים\r\n    const client = new MongoClient(uri);\r\n\r\n    // התחברות למסד הנתונים\r\n    await client.connect();\r\n\r\n    // קבלת יחידת הבסיס נתונים של המסד\r\n    const database = client.db('myDatabase');\r\n\r\n    // קבלת טבלת \"volunteers\"\r\n    const collection = database.collection('volunteers');\r\n\r\n    // בדיקה עבור שם משתמש ומייל\r\n    const result = await collection.findOne({ username, email });\r\n\r\n    // סגירת חיבור למסד הנתונים\r\n    client.close();\r\n\r\n    // החזרת תוצאת הבדיקה (true אם נמצא תואם, אחרת false)\r\n    return !!result;\r\n  } catch (error) {\r\n    console.error('Error connecting to database:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nmodule.exports = { checkUserInDatabase };\r\n"],"mappings":";AAAA,IAAAA,QAAA,GAAwBC,OAAO,CAAC,SAAS,CAAC;EAAlCC,WAAW,GAAAF,QAAA,CAAXE,WAAW;AAGnB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAUC,QAAQ,EAAEC,KAAK;EAAA,IAAAC,GAAA,EAAAC,MAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,MAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,qBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAGxCT,GAAG,GAAG,2BAA2B;QAGjCC,MAAM,GAAG,IAAIL,WAAW,CAACI,GAAG,CAAC;QAAAQ,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CAG7BV,MAAM,CAACW,OAAO,CAAC,CAAC;MAAA;QAGhBV,QAAQ,GAAGD,MAAM,CAACY,EAAE,CAAC,YAAY,CAAC;QAGlCV,UAAU,GAAGD,QAAQ,CAACC,UAAU,CAAC,YAAY,CAAC;QAAAK,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CAG/BR,UAAU,CAACW,OAAO,CAAC;UAAEhB,QAAQ,EAARA,QAAQ;UAAEC,KAAK,EAALA;QAAM,CAAC,CAAC;MAAA;QAAtDK,MAAM,GAAAI,QAAA,CAAAO,IAAA;QAGZd,MAAM,CAACe,KAAK,CAAC,CAAC;QAAC,OAAAR,QAAA,CAAAS,MAAA,WAGR,CAAC,CAACb,MAAM;MAAA;QAAAI,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;QAEfW,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAAZ,QAAA,CAAAU,EAAO,CAAC;QAAC,OAAAV,QAAA,CAAAS,MAAA,WAC/C,KAAK;MAAA;MAAA;QAAA,OAAAT,QAAA,CAAAa,IAAA;IAAA;EAAA,0BAAAC,OAAA;AAAA,CAEf;AAEDC,MAAM,CAACC,OAAO,GAAG;EAAE3B,mBAAmB,EAAnBA;AAAoB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}