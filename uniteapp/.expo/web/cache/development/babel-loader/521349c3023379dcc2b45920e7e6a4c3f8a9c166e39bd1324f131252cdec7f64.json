{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { addItem, getById, getAll, updateItem, addVolunteer } from \"./service\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport LoginScreen from \"./components/LoginScreen\";\nimport LanguageSelection from \"./components/LanguageSelection\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport AppReducer from \"./src/reducers\";\nimport AppNavigator from \"./src/navigations/AppNavigation\";\nimport AllMessage from \"./components/AllMessage\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nconsole.disableYellowBox = true;\nfunction StarterApp() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    details = _useState2[0],\n    setDetails = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    request = _useState4[0],\n    setRequest = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUserID = _useState6[0],\n    setCurrentUserID = _useState6[1];\n  useEffect(function () {\n    setCurrentUserID('222222222');\n  }, []);\n  return _jsx(\"div\", {\n    className: \"App\",\n    children: _jsx(Router, {\n      children: _jsxs(Switch, {\n        children: [_jsx(Route, {\n          exact: true,\n          path: \"/\",\n          component: LoginScreen\n        }), _jsx(Route, {\n          path: \"/LanguageSelection\",\n          component: LanguageSelection\n        }), _jsx(Route, {\n          component: LoginScreen\n        })]\n      })\n    })\n  });\n}\nexport default StarterApp;","map":{"version":3,"names":["addItem","getById","getAll","updateItem","addVolunteer","React","useState","useEffect","axios","LoginScreen","LanguageSelection","createNativeStackNavigator","AppRegistry","thunk","Provider","createStore","applyMiddleware","AppReducer","AppNavigator","AllMessage","BrowserRouter","Router","Route","Switch","jsx","_jsx","jsxs","_jsxs","Stack","console","disableYellowBox","StarterApp","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","request","setRequest","_useState5","_useState6","currentUserID","setCurrentUserID","className","children","exact","path","component"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["import { addItem, getById, getAll, updateItem, addVolunteer } from './service'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\n// import LoginScreen from '../uniteapp/login-screen/src/login/login';\r\n// import { StyleSheet, Text, View } from 'react-native';\r\n// import Connect from './components/Connect';\r\n// import HelpMassage from './components/HelpMassage';\r\n// import FormComponent from './components/FormComponent';\r\n// import VolunteeringInTherapy from './components/VolunteeringInTherapy';\r\n// import AddVolunteer from './components/AddVolunteer';\r\n// import SignupScreen from './src/screens/SignupScreen';\r\n// import VolunteerComponent from './components/VolunteerComponent'\r\n// import AddRecipient from './components/AddRecipient';\r\n// import Retrieve from './components/Retrieve'\r\n// import Table from './components/Table'\r\nimport LoginScreen from './components/LoginScreen'\r\n// import RegistrationForm from './components/RegistrationForm'\r\n// import MyComponent from './components/MyComponent'\r\n// import RequestRecipient from './components/RequestRecipient'\r\n// import HelpRequestForm from './components/HelpRequestForm'\r\nimport LanguageSelection from './components/LanguageSelection'\r\n// import PersonalArea  from './components/PersonalArea '\r\n\r\n// import { NavigationContainer } from '@react-navigation/native';\r\n// import { createStackNavigator } from '@react-navigation/stack';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport { AppRegistry } from 'react-native';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport AppReducer from './src/reducers';\r\nimport AppNavigator from './src/navigations/AppNavigation';\r\nimport AllMessage from './components/AllMessage';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconsole.disableYellowBox = true;\r\n\r\nfunction StarterApp() {\r\n  const [details, setDetails] = useState([]);//שיכניס את הנתונים למערך - בעצם שיכניס למשתנה את כל האוביקט\r\n  const [request, setRequest] = useState();//משתנה כדי לוודא האם היתה גישה לסרוויס\r\n  const [currentUserID, setCurrentUserID] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    // Simulating the retrieval of the current user's ID\r\n    setCurrentUserID('222222222');\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <View> */}\r\n\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LoginScreen} />\r\n            <Route path=\"/LanguageSelection\" component={LanguageSelection} />\r\n            {/* <Route path=\"/contact\" component={Contact} /> */}\r\n            <Route component={LoginScreen} />\r\n          </Switch>\r\n        </Router>\r\n        {/* <RegistrationForm />\r\n        <LanguageSelection /> */}\r\n\r\n        {/* <NavigationContainer>\r\n          <Stack.Navigator>\r\n            <Stack.Screen\r\n              name=\"Home\"\r\n              component={LoginScreen}\r\n              options={{ title: 'login' }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"LanguageSelection\"\r\n              component={LanguageSelection}\r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer> */}\r\n\r\n\r\n        {/* <NavigationContainer>\r\n          <Stack.Navigator>\r\n            <Stack.Screen\r\n              name=\"/LanguageSelection\"\r\n              component={LanguageSelection}\r\n              options={{ title: 'Welcome' }}\r\n            /> */}\r\n        {/* <Stack.Screen name=\"Profile\" component={ProfileScreen} /> */}\r\n        {/* </Stack.Navigator>\r\n        </NavigationContainer> */}\r\n\r\n\r\n        {/* <AddVolunteer /> */}\r\n        {/* <AddRecipient /> */}\r\n        {/* {currentUserID === '222222222' ? (\r\n        <HelpMassage />\r\n      ) : (\r\n        <Text>You do not have permission to access this component</Text>\r\n      )} */}\r\n        {/* <HelpMassage/> */}\r\n        {/* <HelpRequestForm/> */}\r\n        {/* <VolunteeringInTherapy /> */}\r\n        {/* < BenodProvider > */}\r\n        {/* <Retrieve/> */}\r\n        {/* <Table/> */}\r\n        {/* <MyComponent/> */}\r\n        {/* <PersonalArea/> */}\r\n        {/* <RequestRecipient/> */}\r\n        {/* <RegistrationForm user = {volunteerId}/> */}\r\n        {/* <LoginScreen/> */}\r\n        {/* <AllMessage /> */}\r\n        {/* <VolunteerComponent /> */}\r\n        {/* </BenodProvider> */}\r\n        {/* נותנת למשתמש לבחור מה הדירוג שלו לכל דבר */}\r\n        {/* <FormComponent/> */}\r\n        {/* <try/> */}\r\n        {/* <StatusBar style=\"auto\" /> */}\r\n        {/* <Provider store={store}> */}\r\n        {/* <AppNavigator /> */}\r\n        {/* <SignupScreen/> */}\r\n        {/* </Provider> */}\r\n      {/* </View> */}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n// AppRegistry.registerComponent('rn_starter_kit', () => StarterApp);\r\n\r\nexport default StarterApp;\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,YAAY;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAazB,OAAOC,WAAW;AAKlB,OAAOC,iBAAiB;AAKxB,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAC,WAAA;AAG5E,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAEpD,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1E,IAAMC,KAAK,GAAGjB,0BAA0B,CAAC,CAAC;AAC1CkB,OAAO,CAACC,gBAAgB,GAAG,IAAI;AAE/B,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAAC,SAAA,GAA8B1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8B/B,QAAQ,CAAC,CAAC;IAAAgC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0CnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAGtCnC,SAAS,CAAC,YAAM;IAEdqC,gBAAgB,CAAC,WAAW,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAGN,OACEnB,IAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAGhBrB,IAAA,CAACJ,MAAM;MAAAyB,QAAA,EACLnB,KAAA,CAACJ,MAAM;QAAAuB,QAAA,GACLrB,IAAA,CAACH,KAAK;UAACyB,KAAK;UAACC,IAAI,EAAC,GAAG;UAACC,SAAS,EAAExC;QAAY,CAAE,CAAC,EAChDgB,IAAA,CAACH,KAAK;UAAC0B,IAAI,EAAC,oBAAoB;UAACC,SAAS,EAAEvC;QAAkB,CAAE,CAAC,EAEjEe,IAAA,CAACH,KAAK;UAAC2B,SAAS,EAAExC;QAAY,CAAE,CAAC;MAAA,CAC3B;IAAC,CACH;EAAC,CA6DR,CAAC;AAGV;AAIA,eAAesB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}