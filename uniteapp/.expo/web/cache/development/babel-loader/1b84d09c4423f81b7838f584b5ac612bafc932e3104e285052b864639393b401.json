{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addItem, getById, getAll, updateItem, addVolunteer } from \"./service\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Connect from \"./components/Connect\";\nimport HelpMassage from \"./components/HelpMassage\";\nimport FormComponent from \"./components/FormComponent\";\nimport VolunteeringInTherapy from \"./components/VolunteeringInTherapy\";\nimport AddVolunteer from \"./components/AddVolunteer\";\nimport SignupScreen from \"./src/screens/SignupScreen\";\nimport VolunteerComponent from \"./components/VolunteerComponent\";\nimport AddRecipient from \"./components/AddRecipient\";\nimport Retrieve from \"./components/Retrieve\";\nimport Table from \"./components/Table\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport LanguageSelection from \"./components/LanguageSelection \";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport AppReducer from \"./src/reducers\";\nimport AppNavigator from \"./src/navigations/AppNavigation\";\nimport AllMessage from \"./components/AllMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar store = createStore(AppReducer, applyMiddleware(thunk));\nconsole.disableYellowBox = true;\nfunction StarterApp() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    details = _useState2[0],\n    setDetails = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    request = _useState4[0],\n    setRequest = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUserID = _useState6[0],\n    setCurrentUserID = _useState6[1];\n  var getRequestHandler = function getRequestHandler() {\n    var response;\n    return _regeneratorRuntime.async(function getRequestHandler$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('http://localhost:8000/volunteers').then(function (response) {\n            setDetails(response.data);\n            setRequest(\"GET\");\n            console.log(\"Success!!!!!!!!\", response);\n          }));\n        case 2:\n          response = _context.sent;\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    setCurrentUserID('222222222');\n  }, []);\n  return _jsxs(\"div\", {\n    className: \"App\",\n    children: [_jsx(\"h1\", {\n      children: \"My Site\"\n    }), _jsx(\"button\", {\n      onClick: function onClick() {\n        return getRequestHandler();\n      },\n      children: \"connect to node that works!\\uD83D\\uDE02\\uD83D\\uDE01\"\n    }), _jsx(\"hr\", {}), request == \"GET\" ? _jsxs(\"span\", {\n      children: [\" \", details.ravkavId, \" Get!!!!!\"]\n    }) : _jsx(\"span\", {\n      children: \"None\"\n    }), _jsxs(View, {\n      children: [_jsx(RegistrationForm, {}), _jsx(Provider, {\n        store: store\n      })]\n    })]\n  });\n}\nAppRegistry.registerComponent('rn_starter_kit', function () {\n  return StarterApp;\n});\nexport default StarterApp;","map":{"version":3,"names":["addItem","getById","getAll","updateItem","addVolunteer","React","useState","useEffect","axios","StyleSheet","Text","View","Connect","HelpMassage","FormComponent","VolunteeringInTherapy","AddVolunteer","SignupScreen","VolunteerComponent","AddRecipient","Retrieve","Table","LoginScreen","RegistrationForm","LanguageSelection","AppRegistry","thunk","Provider","createStore","applyMiddleware","AppReducer","AppNavigator","AllMessage","jsx","_jsx","jsxs","_jsxs","store","console","disableYellowBox","StarterApp","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","request","setRequest","_useState5","_useState6","currentUserID","setCurrentUserID","getRequestHandler","response","_regeneratorRuntime","async","getRequestHandler$","_context","prev","next","awrap","get","then","data","log","sent","stop","Promise","className","children","onClick","ravkavId","registerComponent"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["\r\nimport { addItem, getById, getAll, updateItem, addVolunteer } from './service'\r\nimport React, { useState,useEffect } from \"react\";\r\nimport axios from 'axios'\r\n// import LoginScreen from '../uniteapp/login-screen/src/login/login';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Connect from './components/Connect';\r\nimport HelpMassage from './components/HelpMassage';\r\nimport FormComponent from './components/FormComponent';\r\nimport VolunteeringInTherapy from './components/VolunteeringInTherapy';\r\nimport AddVolunteer from './components/AddVolunteer';\r\nimport SignupScreen from './src/screens/SignupScreen';\r\nimport VolunteerComponent from './components/VolunteerComponent'\r\nimport AddRecipient from './components/AddRecipient';\r\nimport Retrieve from './components/Retrieve'\r\nimport Table from './components/Table'\r\nimport LoginScreen from './components/LoginScreen'\r\nimport RegistrationForm from './components/RegistrationForm'\r\n// import FetchDB from './components/FetchDB'\r\n\r\nimport LanguageSelection  from './components/LanguageSelection '\r\n// import FetchFromMongoDB  from './components/FetchFromMongoDB '\r\n\r\n\r\n\r\nimport {AppRegistry} from 'react-native';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\n\r\nimport AppReducer from './src/reducers';\r\nimport AppNavigator from './src/navigations/AppNavigation';\r\nimport AllMessage from './components/AllMessage';\r\n\r\nconst store = createStore(AppReducer, applyMiddleware(thunk));\r\n\r\nconsole.disableYellowBox = true;\r\n\r\nfunction StarterApp() {\r\n    const [details, setDetails] = useState([]);//שיכניס את הנתונים למערך - בעצם שיכניס למשתנה את כל האוביקט\r\n  const [request, setRequest] = useState();//משתנה כדי לוודא האם היתה גישה לסרוויס\r\n  const [currentUserID, setCurrentUserID] = useState('');\r\n\r\n  /*connect to service - node - גישה לסרוויס */\r\n  const getRequestHandler = async () => {\r\n    const response = await axios.get('http://localhost:8000/volunteers')\r\n      .then((response) => {\r\n        // setName=(response.data.name)\r\n        setDetails(response.data);\r\n        setRequest(\"GET\");\r\n        console.log(\"Success!!!!!!!!\", response)\r\n\r\n      });\r\n    /* */\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Simulating the retrieval of the current user's ID\r\n    setCurrentUserID('222222222');\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n           <h1>My Site</h1>\r\n          <button onClick={() => getRequestHandler()} >connect to node that works!😂😁</button>\r\n          <hr />{/* הצגת הנתונים בעמידה בתנאי */}\r\n           {request == \"GET\" ? <span> {details.ravkavId} Get!!!!!</span> : <span>None</span>}\r\n          <View>\r\n            {/* <AddVolunteer /> */}\r\n            {/* <AddRecipient /> */}\r\n            {/* {currentUserID === '222222222' ? (\r\n        <HelpMassage />\r\n      ) : (\r\n        <Text>You do not have permission to access this component</Text>\r\n      )} */}\r\n            {/* <HelpMassage/> */}\r\n            {/* <VolunteeringInTherapy/> */}\r\n           {/* < BenodProvider > */}\r\n              {/* <Connect /> */}\r\n              {/* <Retrieve/> */}\r\n              {/* <FetchDB/> */}\r\n              {/* <Table/> */}\r\n              <RegistrationForm/>\r\n              {/* <LoginScreen/> */}\r\n             {/* <AllMessage /> */}\r\n             {/* <LanguageSelection /> */}\r\n            {/* <VolunteerComponent /> */}\r\n{/* </BenodProvider> */}\r\n            {/* <FormComponent/> */}\r\n            {/* <try/> */}\r\n           {/* <StatusBar style=\"auto\" /> */}\r\n           <Provider store={store}>\r\n      {/* <AppNavigator /> */}\r\n      {/* <SignupScreen/> */}\r\n     \r\n      {/* <LoginScreen /> */}\r\n    </Provider>\r\n          </View>\r\n         </div>\r\n    \r\n  );\r\n}\r\n\r\nAppRegistry.registerComponent('rn_starter_kit', () => StarterApp);\r\n\r\nexport default StarterApp;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}