{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _require = require(\"../service\"),\n  getAllnewRequests = _require.getAllnewRequests;\nvar PersonalArea = function PersonalArea(_ref) {\n  var volunteerId = _ref.volunteerId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    previousVolunteerings = _useState2[0],\n    setPreviousVolunteerings = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    upcomingVolunteerings = _useState4[0],\n    setUpcomingVolunteerings = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messages = _useState6[0],\n    setMessages = _useState6[1];\n  useEffect(function () {\n    var fetchPreviousVolunteerings = function fetchPreviousVolunteerings() {\n      var response;\n      return _regeneratorRuntime.async(function fetchPreviousVolunteerings$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getAllnewRequests(volunteerId));\n          case 3:\n            response = _context.sent;\n            setPreviousVolunteerings(response.data);\n            _context.next = 10;\n            break;\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Error fetching previous volunteerings:', _context.t0);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n    var fetchUpcomingVolunteerings = function fetchUpcomingVolunteerings() {\n      var response;\n      return _regeneratorRuntime.async(function fetchUpcomingVolunteerings$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getAllnewRequests(volunteerId));\n          case 3:\n            response = _context2.sent;\n            setUpcomingVolunteerings(response.data);\n            _context2.next = 10;\n            break;\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('Error fetching upcoming volunteerings:', _context2.t0);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n    fetchPreviousVolunteerings();\n    fetchUpcomingVolunteerings();\n  }, [volunteerId]);\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      source: require('/images/logo.png'),\n      style: styles.image\n    }), _jsx(Text, {\n      children: \"\\u05D4\\u05EA\\u05E0\\u05D3\\u05D1\\u05D5\\u05D9\\u05D5\\u05EA \\u05E7\\u05D5\\u05D3\\u05DE\\u05D5\\u05EA\"\n    }), previousVolunteerings.map(function (volunteering) {\n      return _jsx(Text, {\n        children: volunteering.title\n      }, volunteering.id);\n    }), _jsx(Text, {\n      children: \"\\u05D4\\u05EA\\u05E0\\u05D3\\u05D1\\u05D5\\u05D9\\u05D5\\u05EA \\u05D4\\u05D1\\u05D0\\u05D5\\u05EA\"\n    }), upcomingVolunteerings.map(function (volunteering) {\n      return _jsx(Text, {\n        children: volunteering.title\n      }, volunteering.id);\n    }), _jsx(Text, {\n      children: \"\\u05D4\\u05D5\\u05D3\\u05E2\\u05D5\\u05EA \\u05DE\\u05DE\\u05E7\\u05D1\\u05DC\\u05D9 \\u05D4\\u05E1\\u05D9\\u05D5\\u05E2\"\n    }), messages.map(function (message) {\n      return _jsx(Text, {\n        children: message.content\n      }, message.id);\n    })]\n  });\n};\nvar styles = {\n  image: {\n    width: 200,\n    height: 200\n  }\n};\nexport default PersonalArea;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","_require","require","getAllnewRequests","PersonalArea","_ref","volunteerId","_useState","_useState2","_slicedToArray","previousVolunteerings","setPreviousVolunteerings","_useState3","_useState4","upcomingVolunteerings","setUpcomingVolunteerings","_useState5","_useState6","messages","setMessages","fetchPreviousVolunteerings","response","_regeneratorRuntime","async","fetchPreviousVolunteerings$","_context","prev","next","awrap","sent","data","t0","console","log","stop","Promise","fetchUpcomingVolunteerings","fetchUpcomingVolunteerings$","_context2","children","source","style","styles","image","map","volunteering","title","id","message","content","width","height"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/PersonalArea.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\r\nconst { getAllnewRequests } = require('../service');\r\n\r\nconst PersonalArea = ({ volunteerId }) => {\r\n  const [previousVolunteerings, setPreviousVolunteerings] = useState([]);\r\n  const [upcomingVolunteerings, setUpcomingVolunteerings] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch previous volunteerings from VolunteerPosted table based on volunteerId\r\n    const fetchPreviousVolunteerings = async () => {\r\n      try {\r\n        // Replace 'fetchVolunteeringsByVolunteerId' with your own function to fetch data from the database\r\n        // const response = await fetchVolunteeringsByVolunteerId(volunteerId);\r\n        const response = await getAllnewRequests(volunteerId);\r\n        setPreviousVolunteerings(response.data);\r\n      } catch (error) {\r\n        console.log('Error fetching previous volunteerings:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch upcoming volunteerings from newRequests table based on volunteerId\r\n    const fetchUpcomingVolunteerings = async () => {\r\n      try {\r\n        // Replace 'fetchUpcomingVolunteeringsByVolunteerId' with your own function to fetch data from the database\r\n        const response = await getAllnewRequests(volunteerId);\r\n        setUpcomingVolunteerings(response.data);\r\n      } catch (error) {\r\n        console.log('Error fetching upcoming volunteerings:', error);\r\n      }\r\n    };\r\n\r\n    // // Fetch messages from VolunteersMessages table based on volunteerId\r\n    // const fetchMessages = async () => {\r\n    //   try {\r\n    //     // Replace 'fetchMessagesByVolunteerId' with your own function to fetch data from the database\r\n    //     const response = await fetchMessagesByVolunteerId(volunteerId);\r\n    //     setMessages(response.data);\r\n    //   } catch (error) {\r\n    //     console.log('Error fetching messages:', error);\r\n    //   }\r\n    // };\r\n\r\n    fetchPreviousVolunteerings();\r\n    fetchUpcomingVolunteerings();\r\n    // fetchMessages();\r\n  }, [volunteerId]);\r\n\r\n  return (\r\n    <View>\r\n      <Image source={require('/images/logo.png')} style={styles.image} />\r\n      <Text>התנדבויות קודמות</Text>\r\n      {previousVolunteerings.map((volunteering) => (\r\n        <Text key={volunteering.id}>{volunteering.title}</Text>\r\n        // Render the necessary details of the previous volunteerings\r\n      ))}\r\n      \r\n      <Text>התנדבויות הבאות</Text>\r\n      {upcomingVolunteerings.map((volunteering) => (\r\n        <Text key={volunteering.id}>{volunteering.title}</Text>\r\n        // Render the necessary details of the upcoming volunteerings\r\n      ))}\r\n      \r\n      <Text>הודעות ממקבלי הסיוע</Text>\r\n      {messages.map((message) => (\r\n        <Text key={message.id}>{message.content}</Text>\r\n        // Render the necessary details of the messages\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n};\r\n\r\nexport default PersonalArea;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}