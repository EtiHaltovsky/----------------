{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { MongoClient } from 'mongodb';\nfunction FetchFromMongoDB() {\n  var uri, dbName, client, db, volunteers, query, options, result;\n  return _regeneratorRuntime.async(function FetchFromMongoDB$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        uri = 'mongodb://localhost:27017';\n        dbName = 'UniteVolunteerDB';\n        client = new MongoClient(uri, {\n          useUnifiedTopology: true\n        });\n        _context.prev = 3;\n        _context.next = 6;\n        return _regeneratorRuntime.awrap(volunteers.connect());\n      case 6:\n        db = client.db(dbName);\n        volunteers = db.volunteers('volunteers');\n        query = {};\n        options = {};\n        _context.next = 12;\n        return _regeneratorRuntime.awrap(volunteers.find.toArray());\n      case 12:\n        result = _context.sent;\n        return _context.abrupt(\"return\", result);\n      case 16:\n        _context.prev = 16;\n        _context.t0 = _context[\"catch\"](3);\n        console.error('שגיאה בשליפת הנתונים ממסד הנתונים:', _context.t0);\n        throw _context.t0;\n      case 20:\n        _context.prev = 20;\n        client.close();\n        return _context.finish(20);\n      case 23:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, [[3, 16, 20, 23]], Promise);\n}\nexport default FetchFromMongoDB;","map":{"version":3,"names":["MongoClient","FetchFromMongoDB","uri","dbName","client","db","volunteers","query","options","result","_regeneratorRuntime","async","FetchFromMongoDB$","_context","prev","next","useUnifiedTopology","awrap","connect","find","toArray","sent","abrupt","t0","console","error","close","finish","stop","Promise"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/FetchFromMongoDB.js"],"sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\n// פונקציה אסינכרונית עבור שליפת הנתונים ממסד הנתונים\r\nasync function FetchFromMongoDB() {\r\n  const uri = 'mongodb://localhost:27017'; // URI של מסד הנתונים MongoDB\r\n  const dbName = 'UniteVolunteerDB'; // שם בסיס הנתונים\r\n\r\n  // יצירת חיבור למסד הנתונים\r\n  const client = new MongoClient(uri, { useUnifiedTopology: true });\r\n  \r\n  try {\r\n    await volunteers.connect(); // התחברות למסד הנתונים\r\n    \r\n    const db = client.db(dbName); // קבלת יישות בסיס הנתונים\r\n    const volunteers = db.volunteers('volunteers'); // קבלת יישות הקולקציה\r\n    \r\n    const query = { /* אובייקט עם התנאים לחיפוש */ };\r\n    const options = { /* אובייקט עם האפשרויות של השאילתה */ };\r\n    \r\n    const result = await volunteers.find.toArray(); // ביצוע שאילתת חיפוש וקבלת תוצאות\r\n    \r\n    return result; // החזרת התוצאות\r\n  } catch (error) {\r\n    console.error('שגיאה בשליפת הנתונים ממסד הנתונים:', error);\r\n    throw error;\r\n  } finally {\r\n    client.close(); // סגירת החיבור למסד הנתונים בסיום הפונקציה\r\n  }\r\n}\r\n\r\nexport default FetchFromMongoDB;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,SAAS;AAGrC,SAAeC,gBAAgBA,CAAA;EAAA,IAAAC,GAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,EAAA,EAAAC,UAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,MAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,kBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QACvBb,GAAG,GAAG,2BAA2B;QACjCC,MAAM,GAAG,kBAAkB;QAG3BC,MAAM,GAAG,IAAIJ,WAAW,CAACE,GAAG,EAAE;UAAEc,kBAAkB,EAAE;QAAK,CAAC,CAAC;QAAAH,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAO,KAAA,CAGzDX,UAAU,CAACY,OAAO,CAAC,CAAC;MAAA;QAEpBb,EAAE,GAAGD,MAAM,CAACC,EAAE,CAACF,MAAM,CAAC;QACtBG,UAAU,GAAGD,EAAE,CAACC,UAAU,CAAC,YAAY,CAAC;QAExCC,KAAK,GAAG,CAAiC,CAAC;QAC1CC,OAAO,GAAG,CAAwC,CAAC;QAAAK,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAO,KAAA,CAEpCX,UAAU,CAACa,IAAI,CAACC,OAAO,CAAC,CAAC;MAAA;QAAxCX,MAAM,GAAAI,QAAA,CAAAQ,IAAA;QAAA,OAAAR,QAAA,CAAAS,MAAA,WAELb,MAAM;MAAA;QAAAI,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;QAEbW,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAAZ,QAAA,CAAAU,EAAO,CAAC;QAAC,MAAAV,QAAA,CAAAU,EAAA;MAAA;QAAAV,QAAA,CAAAC,IAAA;QAG3DV,MAAM,CAACsB,KAAK,CAAC,CAAC;QAAC,OAAAb,QAAA,CAAAc,MAAA;MAAA;MAAA;QAAA,OAAAd,QAAA,CAAAe,IAAA;IAAA;EAAA,kCAAAC,OAAA;AAAA;AAInB,eAAe5B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}