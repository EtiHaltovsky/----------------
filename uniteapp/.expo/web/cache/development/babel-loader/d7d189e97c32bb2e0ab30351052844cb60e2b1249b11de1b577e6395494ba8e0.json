{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HelpMassage = function HelpMassage() {\n  var handleAccept = function handleAccept() {};\n  var handleReject = function handleReject() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.message,\n      children: \"\\u05E6\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD \\u05D4\\u05E1\\u05E2\\u05D4 \\u05DE\\u05D0\\u05E9\\u05D3\\u05D5\\u05D3 \\u05D4\\u05DC\\u05DC 8 \\u05DC\\u05D1\\u05D9\\u05EA \\u05D4\\u05D7\\u05D5\\u05DC\\u05D9\\u05DD \\u05D0\\u05E1\\u05D5\\u05EA\\u05D0 \\u05D0\\u05E9\\u05D3\\u05D5\\u05D3 \\u05D1\\u05E9\\u05E2\\u05D4 16:15 \\u05D9\\u05D5\\u05DD \\u05E9\\u05DC\\u05D9\\u05E9\\u05D9 16/02/2023\"\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.acceptButton,\n        onPress: handleAccept,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.rejectButton,\n        onPress: handleReject,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\u05D3\\u05D7\\u05D9\\u05D9\\u05D4\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 10,\n    padding: 10,\n    margin: 10,\n    alignItems: 'center'\n  },\n  message: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#4B0082'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  acceptButton: {\n    backgroundColor: '#00CED1',\n    padding: 10,\n    borderRadius: 10,\n    width: 120,\n    alignItems: 'center'\n  },\n  rejectButton: {\n    backgroundColor: '#FF6347',\n    padding: 10,\n    borderRadius: 10,\n    width: 120,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default HelpMassage;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","HelpMassage","handleAccept","handleReject","style","styles","container","children","message","buttonContainer","acceptButton","onPress","buttonText","rejectButton","create","backgroundColor","borderRadius","padding","margin","alignItems","fontSize","fontWeight","textAlign","color","flexDirection","justifyContent","marginTop","width"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/HelpMassage.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst HelpMassage = () => {\r\n\r\n  const handleAccept = () => {\r\n    // פעולות שייעשו בעת לחיצה על כפתור אישור\r\n    // ניתן להשתמש כאן ב-fetch לשליפת הנתונים מ-MongoDB\r\n  }\r\n\r\n  const handleReject = () => {\r\n    // פעולות שייעשו בעת לחיצה על כפתור דחייה\r\n    // ניתן להשתמש כאן ב-fetch לשליפת הנתונים מ-MongoDB\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.message}>צריכים הסעה מאשדוד הלל 8 לבית החולים אסותא אשדוד בשעה 16:15 יום שלישי 16/02/2023</Text>\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.acceptButton} onPress={handleAccept}>\r\n          <Text style={styles.buttonText}>אישור</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.rejectButton} onPress={handleReject}>\r\n          <Text style={styles.buttonText}>דחייה</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#F0F8FF',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    alignItems: 'center'\r\n  },\r\n  message: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#4B0082'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10\r\n  },\r\n  acceptButton: {\r\n    backgroundColor: '#00CED1',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    width: 120,\r\n    alignItems: 'center'\r\n  },\r\n  rejectButton: {\r\n    backgroundColor: '#FF6347',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    width: 120,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default HelpMassage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Text, View } from 'react-native';\r\n// import mongoose from 'mongoose';\r\n\r\n// // Connect to MongoDB\r\n// mongoose.connect('mongodb://localhost/myapp');\r\n\r\n// // Define volunteer schema\r\n// const volunteerSchema = new mongoose.Schema({\r\n//   type: String,\r\n//   location: String,\r\n//   from: String,\r\n//   to: String,\r\n//   date: Date,\r\n//   day: String,\r\n// });\r\n\r\n// // Create volunteer model\r\n// const Volunteer = mongoose.model('Volunteer', volunteerSchema);\r\n\r\n// export default function App() {\r\n//   const [volunteer, setVolunteer] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Find a volunteer from the database\r\n//     Volunteer.findOne({ type: 'transportation', location: 'Ashdod', to: 'Asuta Hospital', date: '2023-02-16', day: 'Tuesday' }, (err, result) => {\r\n//       if (err) {\r\n//         console.error(err);\r\n//       } else {\r\n//         setVolunteer(result);\r\n//       }\r\n//     });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <View>\r\n//       {volunteer ? (\r\n//         <Text>{`We need transportation from ${volunteer.from} to ${volunteer.to} at ${volunteer.date.toLocaleTimeString()} on ${volunteer.day}, ${volunteer.date.toLocaleDateString()}.`}</Text>\r\n//       ) : (\r\n//         <Text>Loading...</Text>\r\n//       )}\r\n//     </View>\r\n//   );\r\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAExB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS,CAG3B,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS,CAG3B,CAAC;EAED,OACEH,KAAA,CAACP,IAAI;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BT,IAAA,CAACJ,IAAI;MAACU,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAgF,CAAM,CAAC,EACpHP,KAAA,CAACP,IAAI;MAACW,KAAK,EAAEC,MAAM,CAACI,eAAgB;MAAAF,QAAA,GAClCT,IAAA,CAACF,gBAAgB;QAACQ,KAAK,EAAEC,MAAM,CAACK,YAAa;QAACC,OAAO,EAAET,YAAa;QAAAK,QAAA,EAClET,IAAA,CAACJ,IAAI;UAACU,KAAK,EAAEC,MAAM,CAACO,UAAW;UAAAL,QAAA,EAAC;QAAK,CAAM;MAAC,CAC5B,CAAC,EACnBT,IAAA,CAACF,gBAAgB;QAACQ,KAAK,EAAEC,MAAM,CAACQ,YAAa;QAACF,OAAO,EAAER,YAAa;QAAAI,QAAA,EAClET,IAAA,CAACJ,IAAI;UAACU,KAAK,EAAEC,MAAM,CAACO,UAAW;UAAAL,QAAA,EAAC;QAAK,CAAM;MAAC,CAC5B,CAAC;IAAA,CACf,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGV,UAAU,CAACmB,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd,CAAC;EACDX,OAAO,EAAE;IACPY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EACDd,eAAe,EAAE;IACfe,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BC,SAAS,EAAE;EACb,CAAC;EACDhB,YAAY,EAAE;IACZK,eAAe,EAAE,SAAS;IAC1BE,OAAO,EAAE,EAAE;IACXD,YAAY,EAAE,EAAE;IAChBW,KAAK,EAAE,GAAG;IACVR,UAAU,EAAE;EACd,CAAC;EACDN,YAAY,EAAE;IACZE,eAAe,EAAE,SAAS;IAC1BE,OAAO,EAAE,EAAE;IACXD,YAAY,EAAE,EAAE;IAChBW,KAAK,EAAE,GAAG;IACVR,UAAU,EAAE;EACd,CAAC;EACDP,UAAU,EAAE;IACVW,KAAK,EAAE,SAAS;IAChBF,UAAU,EAAE,MAAM;IAClBD,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAenB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}