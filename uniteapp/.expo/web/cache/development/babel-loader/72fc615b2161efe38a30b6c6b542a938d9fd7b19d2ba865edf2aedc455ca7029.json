{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nvar _require = require(\"../service\"),\n  checkTravel = _require.checkTravel;\nimport { basicUrl } from \"../basicUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var handleLoginPress = function handleLoginPress() {\n    navigation.navigate('VolunteerPersonalArea');\n  };\n  var handleCreateAccountPress = function handleCreateAccountPress() {\n    navigation.navigate('RegistrationForm');\n  };\n  var goToLanguageSelection = function goToLanguageSelection() {\n    navigation.navigate('LanguageSelection', {\n      name: 'English'\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: goToLanguageSelection,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"go to LanguageSelection\"\n      })\n    }), _jsx(Image, {\n      source: require('/images/logo.png'),\n      style: styles.logo\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05DE\\u05D9\\u05D9\\u05DC\",\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLoginPress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\"\n      })\n    }), _jsx(Text, {\n      style: styles.noAccountText,\n      children: \"\\u05E2\\u05D3\\u05D9\\u05D9\\u05DF \\u05D0\\u05D9\\u05DF \\u05DC\\u05DA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF?\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.createAccountButton,\n      onPress: handleCreateAccountPress,\n      children: _jsx(Text, {\n        style: styles.createAccountButtonText,\n        children: \"\\u05D9\\u05E6\\u05D9\\u05E8\\u05EA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF\"\n      })\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  logo: {\n    width: 300,\n    height: 200,\n    marginBottom: 20\n  },\n  input: {\n    width: '20%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  },\n  noAccountText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  createAccountButton: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  createAccountButtonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  }\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","TouchableOpacity","useNavigation","_require","require","checkTravel","basicUrl","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","handleLoginPress","navigate","handleCreateAccountPress","goToLanguageSelection","name","style","styles","container","children","button","onPress","buttonText","source","logo","input","placeholder","value","onChangeText","noAccountText","createAccountButton","createAccountButtonText","flex","alignItems","justifyContent","backgroundColor","width","height","marginBottom","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingVertical","fontSize","color"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/LoginScreen.js"],"sourcesContent":["// import React from 'react';\r\n// import { View, Text, Image, TouchableOpacity } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\nimport { React, useState } from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nconst { checkTravel } = require('../service');\r\nimport { basicUrl } from '../basicUrl';\r\n\r\nconst LoginScreen = () => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n\r\n  const navigation = useNavigation();\r\n  const handleLoginPress = () => {\r\n\r\nnavigation.navigate('VolunteerPersonalArea');\r\n    // checkTravel(basicUrl + 'volunteers/', email ,password)\r\n    // .then(result => {\r\n    //     console.log(result);\r\n    //     if (result == true) {\r\n    //         navigation.navigate('VolunteerPersonalArea');\r\n    //     }\r\n    // });\r\n\r\n\r\n};\r\n    \r\n\r\n//     checkUserInDatabase();\r\n//     בדיקה על שם המשתמש והמייל כנגד הנתונים במסד הנתונים\r\n//     כאן יש לממש את החיבור למסד הנתונים ואת הבדיקה בהתאם\r\n//     לדוגמה, נניח שיש לנו משתנה users המכיל את המשתמשים הקיימים במסד הנתונים\r\n//     אם השם משתמש והמייל נכונים, מעבר למסך AllMessages\r\n//     אחרת, הצגת התראה עם הודעת שגיאה\r\n//     if (volunteers.some(volunteers => volunteer.password === password && volunteer.email === email)) {\r\n//       // מעבר למסך AllMessages\r\n//       navigation.navigate('RegistrationForm');\r\n\r\n      \r\n//     } else {\r\n//       Alert.alert('שגיאה', 'הסיסמא או המייל אינם נכונים');\r\n//     }\r\n//     פונקציה שמתבצעת בעת לחיצה על כפתור ההתחברות\r\n  \r\n\r\n  const handleCreateAccountPress = () => {\r\n    // navigation.navigate('VolunteerPersonalArea');\r\n    navigation.navigate('RegistrationForm');\r\n  \r\n    // פונקציה שמתבצעת בעת לחיצה על כפתור יצירת חשבון\r\n  };\r\n\r\n  const goToLanguageSelection = () => {\r\n    navigation.navigate('LanguageSelection', { name: 'English' });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        {/* <Image source={require('../assets/Mail  Next-WF.png')}\r\n            style={styles.image}></Image>\r\n        <Text style={styles.Text}>צפה בהודעות</Text> */}\r\n  <TouchableOpacity style={styles.button} onPress={goToLanguageSelection}>\r\n        <Text style={styles.buttonText}>go to LanguageSelection</Text>\r\n      </TouchableOpacity>\r\n\r\n        <Image source={require('/images/logo.png')} style={styles.logo} />\r\n\r\n        <TextInput style={styles.input}\r\n         placeholder=\"מייל\" \r\n         value={password}\r\n         onChangeText={setPassword}\r\n         />\r\n      <TextInput style={styles.input}\r\n       placeholder=\"סיסמא\" \r\n       value={email}\r\n       onChangeText={setEmail}\r\n       />\r\n\r\n<TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n        <Text style={styles.buttonText}>התחבר</Text>\r\n      </TouchableOpacity>\r\n      <Text style={styles.noAccountText}>עדיין אין לך חשבון?</Text>\r\n      <TouchableOpacity style={styles.createAccountButton} onPress={handleCreateAccountPress}>\r\n        <Text style={styles.createAccountButtonText}>יצירת חשבון</Text>\r\n      </TouchableOpacity>\r\n\r\n        {/* <Button title=\"ENTER\" onPress={handleSignup} /> */}\r\n    </View>\r\n\r\n);\r\n\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  logo: {\r\n    width: 300,\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '20%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#000000',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n  noAccountText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  createAccountButton: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  createAccountButtonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       {/* <button onPress={goToLanguageSelection} title='go to LanguageSelection'/> */}\r\n\r\n//       <TouchableOpacity style={styles.button} onPress={goToLanguageSelection}>\r\n//         <Text style={styles.buttonText}>go to LanguageSelection</Text>\r\n//       </TouchableOpacity>\r\n\r\n//       <Image source={require('/images/logo.png')} style={styles.logo} />\r\n//       {/* <TextInput style={styles.input} placeholder=\"שם משתמש\" /> */}\r\n//       <TextInput style={styles.input} placeholder=\"מייל\" />\r\n//       <TextInput style={styles.input} placeholder=\"סיסמא\" />\r\n\r\n//       <TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n//         <Text style={styles.buttonText}>התחבר</Text>\r\n//       </TouchableOpacity>\r\n//       <Text style={styles.noAccountText}>עדיין אין לך חשבון?</Text>\r\n//       <TouchableOpacity style={styles.createAccountButton} onPress={handleCreateAccountPress}>\r\n//         <Text style={styles.createAccountButtonText}>יצירת חשבון</Text>\r\n//       </TouchableOpacity>\r\n\r\n// {/* //בדיקת סיסמא ומייל */}\r\n//         {/* checkCredentials(email, password); */}\r\n//     </View>\r\n//   );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}