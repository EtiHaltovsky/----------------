{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getById } from \"../service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar HelpMassage = function HelpMassage() {\n  var handleAccept = function handleAccept() {\n    setChecked(true);\n    var navigation = useNavigation();\n    navigation.navigate('SuccessScreen', {\n      message: 'ההתנדבות הושלמה בהצלחה, הפרטים ישלחו בהודעה נפרדת'\n    });\n  };\n  var handleReject = function handleReject() {\n    setRejection(true);\n  };\n  return _jsx(_Fragment, {\n    children: !rejection && !checked ? _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.message,\n        children: \"\\u05E6\\u05E8\\u05D9\\u05DB\\u05D9\\u05DD \" + fieldOfVolunteering + \" \\u05DE\" + from + \" \\u05DC\" + where + \" \\u05D1\\u05E9\\u05E2\\u05D4\" + time + \" \\u05D9\\u05D5\\u05DD\" + day + \" \" + date + \" \"\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.rejectButton,\n          onPress: handleReject,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"\\u05D3\\u05D7\\u05D9\\u05D9\\u05D4\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.acceptButton,\n          onPress: handleAccept,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8\"\n          })\n        })]\n      })]\n    }) : rejection ? _jsx(\"span\", {\n      children: \"rejection\"\n    }) : _jsx(\"span\", {\n      children: \"checked\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 10,\n    padding: 10,\n    margin: 10,\n    alignItems: 'center'\n  },\n  message: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#4B0082'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  acceptButton: {\n    backgroundColor: '#00CED1',\n    padding: 10,\n    borderRadius: 10,\n    width: 120,\n    alignItems: 'center'\n  },\n  rejectButton: {\n    backgroundColor: '#FF6347',\n    padding: 10,\n    borderRadius: 10,\n    width: 120,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default HelpMassage;","map":{"version":3,"names":["useNavigation","React","useState","useEffect","axios","getById","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HelpMassage","handleAccept","setChecked","navigation","navigate","message","handleReject","setRejection","children","rejection","checked","View","style","styles","container","Text","fieldOfVolunteering","from","where","time","day","date","buttonContainer","TouchableOpacity","rejectButton","onPress","buttonText","acceptButton","StyleSheet","create","backgroundColor","borderRadius","padding","margin","alignItems","fontSize","fontWeight","textAlign","color","flexDirection","justifyContent","marginTop","width"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/HelpMassage.js"],"sourcesContent":["// import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { getById } from '../service';\r\n\r\nconst HelpMassage = () => {\r\n\r\n\r\n  // const [checked, setChecked] = useState(false)\r\n  // const [rejection, setRejection] = useState(false)\r\n  // const [fieldOfVolunteering, setFieldOfVolunteering] = useState(\"הסעת חולים\");\r\n  // const [from, setfrom] = useState(\"הלל 8 אשדוד\");\r\n  // const [where, setWhere] = useState(\"אסותא אשדוד\");\r\n  // const [time, setTime] = useState(\"16:15\");\r\n  // const [day, setDay] = useState(\"שלישי\");\r\n  // const [date, setDate] = useState(\"16/02/2023\");\r\n\r\n  // const [fieldOfVolunteering, setFieldOfVolunteering] = useState(getById.);\r\n\r\n  const handleAccept = () => {\r\n    setChecked(true)\r\n\r\n\r\n\r\n\r\n\r\n    // פעולות שייעשו בעת לחיצה על כפתור אישור\r\n    // ניתן להשתמש כאן ב-fetch לשליפת הנתונים מ-MongoDB\r\n\r\n    const navigation = useNavigation();\r\n    navigation.navigate('SuccessScreen', { message: 'ההתנדבות הושלמה בהצלחה, הפרטים ישלחו בהודעה נפרדת' });\r\n  }\r\n\r\n  const handleReject = () => {\r\n    // פעולות שייעשו בעת לחיצה על כפתור דחייה\r\n    // ניתן להשתמש כאן ב-fetch לשליפת הנתונים מ-MongoDB\r\n    setRejection(true);\r\n  }\r\n\r\n  // {!rejection && !checked ? <span>!rejection && !checked</span> : <span>ddd</span>}\r\n  return (\r\n    <>\r\n    {!rejection && !checked ?  \r\n    <View style={styles.container}>\r\n      {/* <Text>{`Hello, ${name}!`}</Text> */}\r\n      <Text style={styles.message}>{`צריכים ${fieldOfVolunteering} מ${from} ל${where} בשעה${time} יום${day} ${date} `}</Text>\r\n\r\n\r\n      {/* <Text style={styles.message}>צריכים הסעה מאשדוד הלל 8 לבית החולים אסותא אשדוד בשעה 16:15 יום שלישי 16/02/2023</Text> */}\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.rejectButton} onPress={handleReject}>\r\n          <Text style={styles.buttonText}>דחייה</Text>\r\n          {/* if(rejection==true?<massage />:\"\"); */}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.acceptButton} onPress={handleAccept}>\r\n          <Text style={styles.buttonText}>אישור</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n    </View>\r\n    : rejection ?<span>rejection</span> : <span>checked</span>}\r\n        {/* : rejection ? <span>rejection</span> : <span>checked</span>} */}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#F0F8FF',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    alignItems: 'center'\r\n  },\r\n  message: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#4B0082'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 10\r\n  },\r\n  acceptButton: {\r\n    backgroundColor: '#00CED1',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    width: 120,\r\n    alignItems: 'center'\r\n  },\r\n  rejectButton: {\r\n    backgroundColor: '#FF6347',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    width: 120,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default HelpMassage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, StyleSheet, TouchableOpacity, Alert } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n// import axios from 'axios';\r\n\r\n// const HelpMassage = ({ rideDetails }) => {\r\n//   const navigation = useNavigation();\r\n//   const [isAccepted, setIsAccepted] = useState(false);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const handleAccept = async () => {\r\n//     setIsLoading(true);\r\n//     try {\r\n//         const response = await axios.get('http://localhost:8000/volunteers');\r\n// const volunteers = response.data;\r\n\r\n//     //   const response = await axios.patch(`http://localhost:3000/rides/${rideDetails.id}`, { status: 'accepted' });\r\n//       if (response.status === 200) {\r\n//         setIsAccepted(true);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       Alert.alert('Error', 'Failed to accept ride. Please try again later.');\r\n//     }\r\n//     setIsLoading(false);\r\n//   };\r\n\r\n//   const handleReject = async () => {\r\n//     setIsLoading(true);\r\n//     try {\r\n//         const response = await axios.get('http://localhost:8000/volunteers');\r\n// const volunteers = response.data;\r\n\r\n//     //   const response = await axios.patch(`http://localhost:8000/volunteers/${rideDetails.id}`, { status: 'rejected' });\r\n//       if (response.status === 200) {\r\n//         navigation.navigate('RejectedRide', { rideDetails });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       Alert.alert('Error', 'Failed to reject ride. Please try again later.');\r\n//     }\r\n//     setIsLoading(false);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.message}>{rideDetails.details}</Text>\r\n//       {isAccepted ? (\r\n//         <Text style={styles.acceptedText}>התנדבות זו אושרה בהצלחה</Text>\r\n//       ) : (\r\n//         <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.acceptButton} onPress={handleAccept} disabled={isLoading}>\r\n//             {isLoading ? (\r\n//               <Text style={styles.buttonText}>טוען...</Text>\r\n//             ) : (\r\n//               <Text style={styles.buttonText}>אישור</Text>\r\n//             )}\r\n//           </TouchableOpacity>\r\n//           <TouchableOpacity style={styles.rejectButton} onPress={handleReject} disabled={isLoading}>\r\n//             {isLoading ? (\r\n//               <Text style={styles.buttonText}>טוען...</Text>\r\n//             ) : (\r\n//               <Text style={styles.buttonText}>דחייה</Text>\r\n//             )}\r\n//           </TouchableOpacity>\r\n//         </View>\r\n//       )}\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     backgroundColor: '#F0F8FF',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     margin: 10,\r\n//     alignItems: 'center'\r\n//   },\r\n//   message: {\r\n//     fontSize: 20,\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//     color: '#4B0082'\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-around',\r\n//     marginTop: 10\r\n//   },\r\n//   acceptButton: {\r\n//     backgroundColor: '#00CED1',\r\n//     padding: 10,\r\n//     borderRadius: 10,\r\n//     width: 120,\r\n//     alignItems: 'center'\r\n//   },\r\n//   rejectButton: {\r\n//     backgroundColor: '#FF6347',\r\n//     padding: 10,\r\n//     borderRadius: 10,\r\n//     width: 120,\r\n//     alignItems: 'center'\r\n//   },\r\n//   buttonText: {\r\n//     color: '#FFFFFF',\r\n//     fontWeight: 'bold',\r\n//     fontSize: 16\r\n//   }\r\n// });\r\n\r\n// export default HelpMassage;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}