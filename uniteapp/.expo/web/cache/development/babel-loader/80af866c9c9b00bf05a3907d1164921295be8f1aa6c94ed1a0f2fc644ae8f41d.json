{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar getAllVolunteers = function getAllVolunteers(url) {\n  axios.get(url).then(function (response) {\n    console.log(\"Success!!!!!!!!\", response);\n  });\n};\nvar fetchData = function fetchData() {\n  var response, jsonData;\n  return _regeneratorRuntime.async(function fetchData$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return _regeneratorRuntime.awrap(fetch('https://api.example.com/data'));\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return _regeneratorRuntime.awrap(response.json());\n      case 6:\n        jsonData = _context.sent;\n        setData(jsonData);\n        _context.next = 13;\n        break;\n      case 10:\n        _context.prev = 10;\n        _context.t0 = _context[\"catch\"](0);\n        console.log('Error fetching data:', _context.t0);\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nvar getAll = function getAll(url) {\n  axios.get(url).then(function (response) {\n    console.log(\"Success!!!!!!!!\", response);\n  });\n};\nvar getById = function getById(url, userId) {\n  return axios.get(url + \"/\" + userId);\n};\nvar addItem = function addItem(url, obj) {\n  return axios.post(url, obj);\n};\nvar updateItem = function updateItem(url, userId, obj) {\n  return axios.patch(url + \"/\" + userId, obj);\n};\nexport var addVolunteer = function addVolunteer(url, volunteer) {\n  var response;\n  return _regeneratorRuntime.async(function addVolunteer$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, volunteer));\n      case 3:\n        response = _context2.sent;\n        console.log(response.data);\n        _context2.next = 10;\n        break;\n      case 7:\n        _context2.prev = 7;\n        _context2.t0 = _context2[\"catch\"](0);\n        console.error(_context2.t0);\n      case 10:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var addUser = function addUser(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function addUser$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context3.sent;\n        console.log(response.data);\n        _context3.next = 10;\n        break;\n      case 7:\n        _context3.prev = 7;\n        _context3.t0 = _context3[\"catch\"](0);\n        console.error(_context3.t0);\n      case 10:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var updateVolunteer = function updateVolunteer(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function updateVolunteer$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.prev = 0;\n        _context4.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context4.sent;\n        console.log(response.data);\n        _context4.next = 10;\n        break;\n      case 7:\n        _context4.prev = 7;\n        _context4.t0 = _context4[\"catch\"](0);\n        console.error(_context4.t0);\n      case 10:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getData = function getData(url) {\n  return _regeneratorRuntime.async(function getData$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        axios.get(\"\" + url).then(function (data) {\n          return console.log(data.data);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      case 1:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteVolunteer = function deleteVolunteer(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function deleteVolunteer$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        _context6.prev = 0;\n        _context6.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context6.sent;\n        console.log(response.data);\n        _context6.next = 10;\n        break;\n      case 7:\n        _context6.prev = 7;\n        _context6.t0 = _context6[\"catch\"](0);\n        console.error(_context6.t0);\n      case 10:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport { addItem, getById, getAllVolunteers, updateItem, getAll };\nexport default addVolunteer;","map":{"version":3,"names":["axios","getAllVolunteers","url","get","then","response","console","log","fetchData","jsonData","_regeneratorRuntime","async","fetchData$","_context","prev","next","awrap","fetch","sent","json","setData","t0","stop","Promise","getAll","getById","userId","addItem","obj","post","updateItem","patch","addVolunteer","volunteer","addVolunteer$","_context2","data","error","addUser","user","addUser$","_context3","updateVolunteer","updateVolunteer$","_context4","getData","getData$","_context5","catch","deleteVolunteer","deleteVolunteer$","_context6"],"sources":["C:/Users/This_user/final project eti/uniteapp/service.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n// app.get('/', myController.get);\r\n// app.post('/', myController.post);\r\n// app.put('/:id', myController.put);\r\n// app.delete('/:id', myController.delete);\r\n\r\nconst getAllVolunteers = (url) => { \r\n    axios.get(url)\r\n    .then((response) => { console.log(\"Success!!!!!!!!\",response)\r\n    // .catch((error) => { console.log(error)})\r\n    })\r\n};\r\n\r\n\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n      const response = await fetch('https://api.example.com/data');\r\n      const jsonData = await response.json();\r\n      setData(jsonData);\r\n    } catch (error) {\r\n      console.log('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\nconst getAll = (url) => { \r\n    axios.get(url)\r\n    .then((response) => { console.log(\"Success!!!!!!!!\",response)\r\n    // .catch((error) => { console.log(error)})\r\n    })\r\n};\r\n\r\n\r\nconst getById = (url, userId) => axios.get(`${url}/${userId}`);\r\n\r\nconst addItem = (url, obj) => axios.post(url, obj);\r\n\r\nconst updateItem = (url, userId, obj) => axios.patch(`${url}/${userId}`, obj);\r\n\r\n\r\n\r\nexport const addVolunteer = async (url, volunteer) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, volunteer);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nexport const addUser = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const updateVolunteer = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n//Get data\r\nexport const getData = async (url) => {\r\n    axios\r\n        .get(`${url}`)\r\n        .then(data => console.log(data.data))\r\n        .catch(error => console.log(error));\r\n};\r\n\r\n\r\nexport const deleteVolunteer = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n// export const addItem = async (url, obj) => {\r\n//     const user = await axios.post(\"https://jsonplaceholder.typicode.com/users\", obj)\r\n//     console.log(\"user\", user)\r\n// };\r\n\r\n\r\n\r\n// export const checkDriver = async (url, driver) => {\r\n//     try {\r\n//         const response = await axios.post(`${url}`, driver);\r\n//         console.log(response.data);\r\n//     } catch (error) {\r\n//         console.error(error);\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport { addItem, getById, getAllVolunteers, updateItem,getAll };\r\n\r\nexport default addVolunteer;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}