{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { addItem, getById, getAll, updateItem, addVolunteer } from \"./service\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Connect from \"./components/Connect\";\nimport HelpMassage from \"./components/HelpMassage\";\nimport FormComponent from \"./components/FormComponent\";\nimport VolunteeringInTherapy from \"./components/VolunteeringInTherapy\";\nimport AddVolunteer from \"./components/AddVolunteer\";\nimport SignupScreen from \"./src/screens/SignupScreen\";\nimport VolunteerComponent from \"./components/VolunteerComponent\";\nimport AddRecipient from \"./components/AddRecipient\";\nimport Retrieve from \"./components/Retrieve\";\nimport Table from \"./components/Table\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport MyComponent from \"./components/MyComponent\";\nimport RequestRecipient from \"./components/RequestRecipient\";\nimport HelpRequestForm from \"./components/HelpRequestForm\";\nimport LanguageSelection from \"./components/LanguageSelection \";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport AppReducer from \"./src/reducers\";\nimport AppNavigator from \"./src/navigations/AppNavigation\";\nimport AllMessage from \"./components/AllMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nconsole.disableYellowBox = true;\nfunction StarterApp() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    details = _useState2[0],\n    setDetails = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    request = _useState4[0],\n    setRequest = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUserID = _useState6[0],\n    setCurrentUserID = _useState6[1];\n  useEffect(function () {\n    setCurrentUserID('222222222');\n  }, []);\n  return _jsxs(\"div\", {\n    className: \"App\",\n    children: [_jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: _jsx(Stack.Screen, {\n          name: \"/languageSelection\",\n          component: LanguageSelection\n        })\n      })\n    }), _jsxs(View, {\n      children: [_jsx(NavigationContainer, {\n        children: _jsx(Stack.Navigator, {\n          children: _jsx(Stack.Screen, {\n            name: \"languageSelection\",\n            component: LanguageSelection\n          })\n        })\n      }), _jsx(RegistrationForm, {})]\n    })]\n  });\n}\nexport default StarterApp;","map":{"version":3,"names":["addItem","getById","getAll","updateItem","addVolunteer","React","useState","useEffect","axios","StyleSheet","Text","View","Connect","HelpMassage","FormComponent","VolunteeringInTherapy","AddVolunteer","SignupScreen","VolunteerComponent","AddRecipient","Retrieve","Table","LoginScreen","RegistrationForm","MyComponent","RequestRecipient","HelpRequestForm","LanguageSelection","NavigationContainer","createStackNavigator","AppRegistry","thunk","Provider","createStore","applyMiddleware","AppReducer","AppNavigator","AllMessage","jsx","_jsx","jsxs","_jsxs","Stack","console","disableYellowBox","StarterApp","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","request","setRequest","_useState5","_useState6","currentUserID","setCurrentUserID","className","children","Navigator","Screen","name","component"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["import { addItem, getById, getAll, updateItem, addVolunteer } from './service'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\n// import LoginScreen from '../uniteapp/login-screen/src/login/login';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Connect from './components/Connect';\r\nimport HelpMassage from './components/HelpMassage';\r\nimport FormComponent from './components/FormComponent';\r\nimport VolunteeringInTherapy from './components/VolunteeringInTherapy';\r\nimport AddVolunteer from './components/AddVolunteer';\r\nimport SignupScreen from './src/screens/SignupScreen';\r\nimport VolunteerComponent from './components/VolunteerComponent'\r\nimport AddRecipient from './components/AddRecipient';\r\nimport Retrieve from './components/Retrieve'\r\nimport Table from './components/Table'\r\nimport LoginScreen from './components/LoginScreen'\r\nimport RegistrationForm from './components/RegistrationForm'\r\nimport MyComponent from './components/MyComponent'\r\nimport RequestRecipient from './components/RequestRecipient'\r\nimport HelpRequestForm from './components/HelpRequestForm'\r\n\r\nimport LanguageSelection from './components/LanguageSelection '\r\n// import PersonalArea  from './components/PersonalArea '\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport { AppRegistry } from 'react-native';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport AppReducer from './src/reducers';\r\nimport AppNavigator from './src/navigations/AppNavigation';\r\nimport AllMessage from './components/AllMessage';\r\n\r\nconst Stack = createStackNavigator();\r\nconsole.disableYellowBox = true;\r\n\r\nfunction StarterApp() {\r\n  const [details, setDetails] = useState([]);//שיכניס את הנתונים למערך - בעצם שיכניס למשתנה את כל האוביקט\r\n  const [request, setRequest] = useState();//משתנה כדי לוודא האם היתה גישה לסרוויס\r\n  const [currentUserID, setCurrentUserID] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    // Simulating the retrieval of the current user's ID\r\n    setCurrentUserID('222222222');\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"/languageSelection\" component={LanguageSelection} />\r\n        {/* <Stack.Screen name=\"Details\" component={DetailsScreen} /> */}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n      <View>\r\n\r\n      <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"languageSelection\" component={LanguageSelection} />\r\n        {/* Add other screens */}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n     \r\n        {/* <AddVolunteer /> */}\r\n        {/* <AddRecipient /> */}\r\n        {/* {currentUserID === '222222222' ? (\r\n        <HelpMassage />\r\n      ) : (\r\n        <Text>You do not have permission to access this component</Text>\r\n      )} */}\r\n        {/* <HelpMassage/> */}\r\n        {/* <HelpRequestForm/> */}\r\n        {/* <VolunteeringInTherapy /> */}\r\n        {/* < BenodProvider > */}\r\n        {/* <Retrieve/> */}\r\n        {/* <Table/> */}\r\n        {/* <MyComponent/> */}\r\n        {/* <PersonalArea/> */}\r\n        {/* <RequestRecipient/> */}\r\n        <RegistrationForm/>\r\n        {/* <LoginScreen/> */}\r\n        {/* <AllMessage /> */}\r\n        {/* <LanguageSelection /> */}\r\n        {/* <VolunteerComponent /> */}\r\n        {/* </BenodProvider> */}\r\n        {/* נותנת למשתמש לבחור מה הדירוג שלו לכל דבר */}\r\n        {/* <FormComponent/> */}\r\n        {/* <try/> */}\r\n        {/* <StatusBar style=\"auto\" /> */}\r\n        {/* <Provider store={store}> */}\r\n          {/* <AppNavigator /> */}\r\n          {/* <SignupScreen/> */}\r\n\r\n        {/* </Provider> */}\r\n      </View>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n// AppRegistry.registerComponent('rn_starter_kit', () => StarterApp);\r\n\r\nexport default StarterApp;\r\n\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,YAAY;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGzB,OAAOC,OAAO;AACd,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,qBAAqB;AAC5B,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,kBAAkB;AACzB,OAAOC,YAAY;AACnB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AACvB,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AACvB,OAAOC,eAAe;AAEtB,OAAOC,iBAAiB;AAGxB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,OAAAC,WAAA;AAG/D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAEpD,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,KAAK,GAAGb,oBAAoB,CAAC,CAAC;AACpCc,OAAO,CAACC,gBAAgB,GAAG,IAAI;AAE/B,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAAC,SAAA,GAA8BxC,QAAQ,CAAC,EAAE,CAAC;IAAAyC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8B7C,QAAQ,CAAC,CAAC;IAAA8C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0CjD,QAAQ,CAAC,EAAE,CAAC;IAAAkD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAGtCjD,SAAS,CAAC,YAAM;IAEdmD,gBAAgB,CAAC,WAAW,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAGN,OACEjB,KAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,GAElBrB,IAAA,CAACX,mBAAmB;MAAAgC,QAAA,EACpBrB,IAAA,CAACG,KAAK,CAACmB,SAAS;QAAAD,QAAA,EACdrB,IAAA,CAACG,KAAK,CAACoB,MAAM;UAACC,IAAI,EAAC,oBAAoB;UAACC,SAAS,EAAErC;QAAkB,CAAE;MAAC,CAEzD;IAAC,CACC,CAAC,EACpBc,KAAA,CAAC9B,IAAI;MAAAiD,QAAA,GAELrB,IAAA,CAACX,mBAAmB;QAAAgC,QAAA,EACpBrB,IAAA,CAACG,KAAK,CAACmB,SAAS;UAAAD,QAAA,EACdrB,IAAA,CAACG,KAAK,CAACoB,MAAM;YAACC,IAAI,EAAC,mBAAmB;YAACC,SAAS,EAAErC;UAAkB,CAAE;QAAC,CAExD;MAAC,CACC,CAAC,EAkBlBY,IAAA,CAAChB,gBAAgB,IAAC,CAAC;IAAA,CAef,CAAC;EAAA,CACJ,CAAC;AAGV;AAIA,eAAesB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}