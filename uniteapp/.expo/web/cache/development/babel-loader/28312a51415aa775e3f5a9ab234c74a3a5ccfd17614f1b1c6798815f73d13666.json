{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { checkTravel } from \"../service\";\nimport { basicUrl } from \"../basicUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var obj = {\n    password: password,\n    email: email\n  };\n  var handleLoginPress = function handleLoginPress() {\n    console.log(basicUrl + 'volunteers/', obj);\n    checkTravel(basicUrl + 'volunteers/', obj).then(function (result) {\n      console.log(result);\n    });\n  };\n  var handleCreateAccountPress = function handleCreateAccountPress() {\n    navigation.navigate('RegistrationForm');\n  };\n  var goToLanguageSelection = function goToLanguageSelection() {\n    navigation.navigate('LanguageSelection', {\n      name: 'English'\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.buttonText,\n      children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\\u05D5\\u05EA\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05D0\\u05D9\\u05DE\\u05D9\\u05D9\\u05DC\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\",\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(Button, {\n      title: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\",\n      onPress: handleLoginPress\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  logo: {\n    width: 300,\n    height: 200,\n    marginBottom: 20\n  },\n  input: {\n    width: '20%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  },\n  noAccountText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  createAccountButton: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  createAccountButtonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  }\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","TouchableOpacity","Button","useNavigation","checkTravel","basicUrl","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","email","setEmail","obj","handleLoginPress","console","log","then","result","handleCreateAccountPress","navigation","navigate","goToLanguageSelection","name","style","styles","container","children","buttonText","input","placeholder","value","onChangeText","title","onPress","flex","alignItems","justifyContent","backgroundColor","logo","width","height","marginBottom","borderWidth","borderColor","borderRadius","paddingHorizontal","button","paddingVertical","fontSize","color","noAccountText","createAccountButton","createAccountButtonText"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/LoginScreen.js"],"sourcesContent":["// import React from 'react';\r\n// import { View, Text, Image, TouchableOpacity } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n\r\n\r\n// const WelcomeScreen = ({ navigation }) => {\r\n//   const handleLoginPress = () => {\r\n//     navigation.navigate('./componnents/Connect'); // ניווט לקומפוננטה Connect\r\n//   };\r\n\r\n//   const handleCreateAccountPress = () => {\r\n//     navigation.navigate('AddVolunteer'); // ניווט לקומפוננטה AddVolunteer\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       {/* <Image source={require('./assets/logo.png')} style={styles.logo} /> */}\r\n//       <Image source={require('/images/logo.png')} style={styles.logo} />\r\n//       <Text style={styles.welcomeText}>ברוכים הבאים למתחברים למתנדבים</Text>\r\n//       <TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n//         <Text style={styles.buttonText}>התחבר</Text>\r\n//       </TouchableOpacity>\r\n//       <TouchableOpacity style={styles.button} onPress={handleCreateAccountPress}>\r\n//         <Text style={styles.buttonText}>יצירת חשבון</Text>\r\n//       </TouchableOpacity>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     backgroundColor: '#FFFFFF',\r\n//   },\r\n//   logo: {\r\n//     width:200,\r\n//     height: 150,\r\n//     marginBottom: 20,\r\n//   },\r\n//   welcomeText: {\r\n//     fontSize: 20,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 30,\r\n//     color: '#000000',\r\n//   },\r\n//   button: {\r\n//     backgroundColor: '#FFC0CB',\r\n//     paddingVertical: 10,\r\n//     paddingHorizontal: 20,\r\n//     marginBottom: 10,\r\n//     borderRadius: 5,\r\n//   },\r\n//   buttonText: {\r\n//     fontSize: 16,\r\n//     color: '#FFFFFF',\r\n//   },\r\n// };\r\n\r\n// export default WelcomeScreen;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity,Button } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n// import { checkUserInDatabase } from './components/checkUserInDatabase';\r\n// import { checkUserInDatabase } from './checkUserInDatabase';\r\nimport { checkTravel } from '../service';\r\nimport { basicUrl } from '../basicUrl'\r\n\r\nconst LoginScreen = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const obj={\r\n  password:password,\r\n  email:email\r\n}\r\n  const handleLoginPress = () => {\r\n\r\n    console.log(basicUrl + 'volunteers/',obj)\r\n\r\n    checkTravel(basicUrl + 'volunteers/',obj)\r\n      .then(result => {\r\n        console.log(result);\r\n        // navigation.navigate('VolunteerPersonalArea');\r\n      })\r\n    // checkUserInDatabase();\r\n    // בדיקה על שם המשתמש והמייל כנגד הנתונים במסד הנתונים\r\n    // כאן יש לממש את החיבור למסד הנתונים ואת הבדיקה בהתאם\r\n    // לדוגמה, נניח שיש לנו משתנה users המכיל את המשתמשים הקיימים במסד הנתונים\r\n    // אם השם משתמש והמייל נכונים, מעבר למסך AllMessages\r\n    // אחרת, הצגת התראה עם הודעת שגיאה\r\n    // if (volunteers.some(volunteers => volunteer.password === password && volunteer.email === email)) {\r\n      // מעבר למסך AllMessages\r\n      // navigation.navigate('RegistrationForm');\r\n\r\n\r\n    // } else {\r\n    //   Alert.alert('שגיאה', 'הסיסמא או המייל אינם נכונים');\r\n    // }\r\n    // פונקציה שמתבצעת בעת לחיצה על כפתור ההתחברות\r\n  };\r\n\r\n  const handleCreateAccountPress = () => {\r\n    navigation.navigate('RegistrationForm');\r\n\r\n    // פונקציה שמתבצעת בעת לחיצה על כפתור יצירת חשבון\r\n  };\r\n\r\n  const goToLanguageSelection = () => {\r\n    navigation.navigate('LanguageSelection', { name: 'English' });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n    <Text style={styles.buttonText}>התחברות</Text>\r\n    <TextInput\r\n        style={styles.input}\r\n        placeholder=\"אימייל\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n    />\r\n    <TextInput\r\n        style={styles.input}\r\n        placeholder=\"סיסמא\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n    />\r\n    <Button title=\"התחבר\" onPress={handleLoginPress} />\r\n</View>\r\n\r\n    // <View style={styles.container}>\r\n    //   {/* <button onPress={goToLanguageSelection} title='go to LanguageSelection'/> */}\r\n\r\n    //   <TouchableOpacity style={styles.button} onPress={goToLanguageSelection}>\r\n    //     <Text style={styles.buttonText}>go to LanguageSelection</Text>\r\n    //   </TouchableOpacity>\r\n\r\n    //   <Image source={require('/images/logo.png')} style={styles.logo} />\r\n    //   {/* <TextInput style={styles.input} placeholder=\"שם משתמש\" /> */}\r\n    //   <TextInput style={styles.input} placeholder=\"מייל\" />\r\n    //   <TextInput style={styles.input} placeholder=\"סיסמא\" />\r\n\r\n    //   <TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n    //     <Text style={styles.buttonText}>התחבר</Text>\r\n    //   </TouchableOpacity>\r\n    //   <Text style={styles.noAccountText}>עדיין אין לך חשבון?</Text>\r\n    //   <TouchableOpacity style={styles.createAccountButton} onPress={handleCreateAccountPress}>\r\n    //     <Text style={styles.createAccountButtonText}>יצירת חשבון</Text>\r\n    //   </TouchableOpacity>\r\n\r\n    //   {/* //בדיקת סיסמא ומייל */}\r\n    //   {/* checkCredentials(email, password); */}\r\n    // </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  logo: {\r\n    width: 300,\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '20%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#000000',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n  noAccountText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  createAccountButton: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  createAccountButtonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}