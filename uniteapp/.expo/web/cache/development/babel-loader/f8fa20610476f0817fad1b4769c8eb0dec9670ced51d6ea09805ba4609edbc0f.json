{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport styles from \"./style\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, SocialIcon } from \"react-native-elements\";\nimport * as Facebook from \"expo-facebook\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar appId = \"1047121222092614\";\nexport default function LoginScreen() {\n  var onLoginPress = function onLoginPress() {};\n  var onFbLoginPress = function onFbLoginPress() {\n    var _await$Facebook$logIn, type, token, response, message;\n    return _regeneratorRuntime.async(function onFbLoginPress$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n            appId: appId\n          }));\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n            permissions: [\"public_profile\", \"email\"]\n          }));\n        case 5:\n          _await$Facebook$logIn = _context.sent;\n          type = _await$Facebook$logIn.type;\n          token = _await$Facebook$logIn.token;\n          if (!(type === \"success\")) {\n            _context.next = 19;\n            break;\n          }\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token));\n        case 11:\n          response = _context.sent;\n          _context.t0 = Alert;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(response.json());\n        case 15:\n          _context.t1 = _context.sent.name;\n          _context.t2 = \"Hi \" + _context.t1;\n          _context.t3 = _context.t2 + \"!\";\n          _context.t0.alert.call(_context.t0, \"Logged in!\", _context.t3);\n        case 19:\n          _context.next = 25;\n          break;\n        case 21:\n          _context.prev = 21;\n          _context.t4 = _context[\"catch\"](0);\n          message = _context.t4.message;\n          Alert.alert(\"Facebook Login Error: \" + message);\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 21]], Promise);\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.containerView,\n    behavior: \"padding\",\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsx(View, {\n        style: styles.loginScreenContainer,\n        children: _jsxs(View, {\n          style: styles.loginFormView,\n          children: [_jsx(Text, {\n            style: styles.logoText,\n            children: \"Instamobile\"\n          }), _jsx(TextInput, {\n            placeholder: \"Username\",\n            placeholderColor: \"#c4c3cb\",\n            style: styles.loginFormTextInput\n          }), _jsx(TextInput, {\n            placeholder: \"Password\",\n            placeholderColor: \"#c4c3cb\",\n            style: styles.loginFormTextInput,\n            secureTextEntry: true\n          }), _jsx(Button, {\n            buttonStyle: styles.loginButton,\n            onPress: function onPress() {\n              return onLoginPress();\n            },\n            title: \"Login\"\n          }), _jsx(Button, {\n            containerStyle: styles.fbLoginButton,\n            type: \"clear\",\n            onPress: function onPress() {\n              return onFbLoginPress();\n            },\n            title: \"Login With Facebook\"\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","styles","Alert","Image","Keyboard","KeyboardAvoidingView","Text","TextInput","TouchableWithoutFeedback","Pressable","View","Button","SocialIcon","Facebook","jsx","_jsx","jsxs","_jsxs","appId","LoginScreen","onLoginPress","onFbLoginPress","_await$Facebook$logIn","type","token","response","message","_regeneratorRuntime","async","onFbLoginPress$","_context","prev","next","awrap","initializeAsync","logInWithReadPermissionsAsync","permissions","sent","fetch","t0","json","t1","name","t2","t3","alert","call","t4","stop","Promise","style","containerView","behavior","children","onPress","dismiss","loginScreenContainer","loginFormView","logoText","placeholder","placeholderColor","loginFormTextInput","secureTextEntry","buttonStyle","loginButton","title","containerStyle","fbLoginButton"],"sources":["C:/Users/This_user/final project eti/uniteapp/login-screen/src/login/login.js"],"sourcesContent":["import React from \"react\";\n\nimport styles from \"./style\";\nimport { Alert, Image, Keyboard, KeyboardAvoidingView, Text, TextInput, TouchableWithoutFeedback, Pressable, View } from \"react-native\";\nimport { Button, SocialIcon } from \"react-native-elements\";\nimport * as Facebook from \"expo-facebook\";\n\nconst appId = \"1047121222092614\";\n\nexport default function LoginScreen() {\n  const onLoginPress = () => {};\n\n  const onFbLoginPress = async () => {\n    try {\n      await Facebook.initializeAsync({\n        appId,\n      });\n      const { type, token } = await Facebook.logInWithReadPermissionsAsync({\n        permissions: [\"public_profile\", \"email\"],\n      });\n      if (type === \"success\") {\n        const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);\n        Alert.alert(\"Logged in!\", `Hi ${(await response.json()).name}!`);\n      }\n    } catch ({ message }) {\n      Alert.alert(`Facebook Login Error: ${message}`);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView style={styles.containerView} behavior=\"padding\">\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.loginScreenContainer}>\n          <View style={styles.loginFormView}>\n            <Text style={styles.logoText}>Instamobile</Text>\n            <TextInput placeholder=\"Username\" placeholderColor=\"#c4c3cb\" style={styles.loginFormTextInput} />\n            <TextInput placeholder=\"Password\" placeholderColor=\"#c4c3cb\" style={styles.loginFormTextInput} secureTextEntry={true} />\n            <Button buttonStyle={styles.loginButton} onPress={() => onLoginPress()} title=\"Login\" />\n            <Button containerStyle={styles.fbLoginButton} type='clear' onPress={() => onFbLoginPress()} title=\"Login With Facebook\" />\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}