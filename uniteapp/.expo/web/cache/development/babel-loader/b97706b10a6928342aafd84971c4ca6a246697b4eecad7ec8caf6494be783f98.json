{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar getAll = function getAll(url) {\n  return axios.get(url);\n};\nvar getById = function getById(url, userId) {\n  return axios.get(url + \"/\" + userId);\n};\nvar addItem = function addItem(url, obj) {\n  return axios.post(url, obj);\n};\nvar updateItem = function updateItem(url, userId, obj) {\n  return axios.patch(url + \"/\" + userId, obj);\n};\nvar getUserFullData = function getUserFullData(userId) {\n  var user_url, toDo_url, post_url, _await$getById, user, u_name, email, _await$getAll, userToDo, toDoTitle, _await$getAll2, userPost, postsTitle;\n  return _regeneratorRuntime.async(function getUserFullData$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        user_url = 'https://jsonplaceholder.typicode.com/users';\n        toDo_url = 'https://jsonplaceholder.typicode.com/todos';\n        post_url = 'https://jsonplaceholder.typicode.com/posts';\n        _context.next = 5;\n        return _regeneratorRuntime.awrap(getById(user_url, userId));\n      case 5:\n        _await$getById = _context.sent;\n        user = _await$getById.data;\n        u_name = user.name;\n        email = user.email;\n        _context.next = 11;\n        return _regeneratorRuntime.awrap(getAll(toDo_url + \"?userId=\" + userId));\n      case 11:\n        _await$getAll = _context.sent;\n        userToDo = _await$getAll.data;\n        toDoTitle = userToDo.slice(0, 5).map(function (da) {\n          return da.title;\n        });\n        _context.next = 16;\n        return _regeneratorRuntime.awrap(getAll(post_url + \"?userId=\" + userId));\n      case 16:\n        _await$getAll2 = _context.sent;\n        userPost = _await$getAll2.data;\n        postsTitle = userPost[0].title;\n        return _context.abrupt(\"return\", {\n          u_name: u_name,\n          email: email,\n          toDoTitle: toDoTitle,\n          postsTitle: postsTitle\n        });\n      case 20:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n};\nexport { getUserFullData, addItem, getById, getAll, updateItem };","map":{"version":3,"names":["axios","getAll","url","get","getById","userId","addItem","obj","post","updateItem","patch","getUserFullData","user_url","toDo_url","post_url","_await$getById","user","u_name","email","_await$getAll","userToDo","toDoTitle","_await$getAll2","userPost","postsTitle","_regeneratorRuntime","async","getUserFullData$","_context","prev","next","awrap","sent","data","name","slice","map","da","title","abrupt","stop","Promise"],"sources":["C:/Users/This_user/final project eti/uniteapp/service.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst getAll = (url) => axios.get(url);\r\n\r\nconst getById = (url,userId) => axios.get(`${url}/${userId}`);\r\n\r\nconst addItem = (url, obj) => axios.post(url, obj);\r\n\r\nconst updateItem = (url, userId, obj) => axios.patch(`${url}/${userId}`, obj);\r\n\r\nconst getUserFullData = async (userId) =>\r\n{\r\n    const user_url = 'https://jsonplaceholder.typicode.com/users';\r\n    const toDo_url = 'https://jsonplaceholder.typicode.com/todos';\r\n    const post_url = 'https://jsonplaceholder.typicode.com/posts';\r\n    \r\n    const {data:user} =  await getById(user_url, userId);\r\n    const u_name = user.name;\r\n   const  email= user.email;\r\n   const  {data:userToDo} = await getAll(`${toDo_url}?userId=${userId}`);\r\n   const toDoTitle = userToDo.slice(0,5).map(da => da.title);\r\n    const {data:userPost} = await getAll(`${post_url}?userId=${userId}`);\r\n    const postsTitle = userPost[0].title;\r\n    return {u_name, email, toDoTitle, postsTitle}\r\n}\r\nexport  {getUserFullData, addItem, getById, getAll, updateItem};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,GAAG;EAAA,OAAKF,KAAK,CAACG,GAAG,CAACD,GAAG,CAAC;AAAA;AAEtC,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAIF,GAAG,EAACG,MAAM;EAAA,OAAKL,KAAK,CAACG,GAAG,CAAID,GAAG,SAAIG,MAAQ,CAAC;AAAA;AAE7D,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIJ,GAAG,EAAEK,GAAG;EAAA,OAAKP,KAAK,CAACQ,IAAI,CAACN,GAAG,EAAEK,GAAG,CAAC;AAAA;AAElD,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIP,GAAG,EAAEG,MAAM,EAAEE,GAAG;EAAA,OAAKP,KAAK,CAACU,KAAK,CAAIR,GAAG,SAAIG,MAAM,EAAIE,GAAG,CAAC;AAAA;AAE7E,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAUN,MAAM;EAAA,IAAAO,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,cAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,aAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,cAAA,EAAAC,QAAA,EAAAC,UAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,iBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAE3BlB,QAAQ,GAAG,4CAA4C;QACvDC,QAAQ,GAAG,4CAA4C;QACvDC,QAAQ,GAAG,4CAA4C;QAAAc,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CAElC3B,OAAO,CAACQ,QAAQ,EAAEP,MAAM,CAAC;MAAA;QAAAU,cAAA,GAAAa,QAAA,CAAAI,IAAA;QAAxChB,IAAI,GAAAD,cAAA,CAATkB,IAAI;QACLhB,MAAM,GAAGD,IAAI,CAACkB,IAAI;QAClBhB,KAAK,GAAEF,IAAI,CAACE,KAAK;QAAAU,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CACO9B,MAAM,CAAIY,QAAQ,gBAAWR,MAAQ,CAAC;MAAA;QAAAc,aAAA,GAAAS,QAAA,CAAAI,IAAA;QAAxDZ,QAAQ,GAAAD,aAAA,CAAbc,IAAI;QACNZ,SAAS,GAAGD,QAAQ,CAACe,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAAC,UAAAC,EAAE;UAAA,OAAIA,EAAE,CAACC,KAAK;QAAA,EAAC;QAAAV,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CAC1B9B,MAAM,CAAIa,QAAQ,gBAAWT,MAAQ,CAAC;MAAA;QAAAiB,cAAA,GAAAM,QAAA,CAAAI,IAAA;QAAxDT,QAAQ,GAAAD,cAAA,CAAbW,IAAI;QACLT,UAAU,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAACe,KAAK;QAAA,OAAAV,QAAA,CAAAW,MAAA,WAC7B;UAACtB,MAAM,EAANA,MAAM;UAAEC,KAAK,EAALA,KAAK;UAAEG,SAAS,EAATA,SAAS;UAAEG,UAAU,EAAVA;QAAU,CAAC;MAAA;MAAA;QAAA,OAAAI,QAAA,CAAAY,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA,CAChD;AACD,SAAS9B,eAAe,EAAEL,OAAO,EAAEF,OAAO,EAAEH,MAAM,EAAEQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}