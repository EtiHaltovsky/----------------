{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { checkTravel } from \"../service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var handleLoginPress = function handleLoginPress() {\n    checkTravel;\n    navigation.navigate('VolunteerPersonalArea');\n    if (volunteers.some(function (volunteers) {\n      return volunteer.password === password && volunteer.email === email;\n    })) {\n      navigation.navigate('RegistrationForm');\n    } else {\n      Alert.alert('שגיאה', 'הסיסמא או המייל אינם נכונים');\n    }\n  };\n  var handleCreateAccountPress = function handleCreateAccountPress() {\n    navigation.navigate('RegistrationForm');\n  };\n  var goToLanguageSelection = function goToLanguageSelection() {\n    navigation.navigate('LanguageSelection', {\n      name: 'English'\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: goToLanguageSelection,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"go to LanguageSelection\"\n      })\n    }), _jsx(Image, {\n      source: require('/images/logo.png'),\n      style: styles.logo\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05DE\\u05D9\\u05D9\\u05DC\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLoginPress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\"\n      })\n    }), _jsx(Text, {\n      style: styles.noAccountText,\n      children: \"\\u05E2\\u05D3\\u05D9\\u05D9\\u05DF \\u05D0\\u05D9\\u05DF \\u05DC\\u05DA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF?\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.createAccountButton,\n      onPress: handleCreateAccountPress,\n      children: _jsx(Text, {\n        style: styles.createAccountButtonText,\n        children: \"\\u05D9\\u05E6\\u05D9\\u05E8\\u05EA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF\"\n      })\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  logo: {\n    width: 300,\n    height: 200,\n    marginBottom: 20\n  },\n  input: {\n    width: '20%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginBottom: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  },\n  noAccountText: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  createAccountButton: {\n    backgroundColor: '#FFC0CB',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  createAccountButtonText: {\n    fontSize: 16,\n    color: '#FFFFFF'\n  }\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","View","Text","Image","TextInput","TouchableOpacity","useNavigation","checkTravel","jsx","_jsx","jsxs","_jsxs","LoginScreen","handleLoginPress","navigation","navigate","volunteers","some","volunteer","password","email","Alert","alert","handleCreateAccountPress","goToLanguageSelection","name","style","styles","container","children","button","onPress","buttonText","source","require","logo","input","placeholder","noAccountText","createAccountButton","createAccountButtonText","flex","alignItems","justifyContent","backgroundColor","width","height","marginBottom","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingVertical","fontSize","color"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/LoginScreen.js"],"sourcesContent":["// import React from 'react';\r\n// import { View, Text, Image, TouchableOpacity } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n\r\n\r\n// const WelcomeScreen = ({ navigation }) => {\r\n//   const handleLoginPress = () => {\r\n//     navigation.navigate('./componnents/Connect'); // ניווט לקומפוננטה Connect\r\n//   };\r\n\r\n//   const handleCreateAccountPress = () => {\r\n//     navigation.navigate('AddVolunteer'); // ניווט לקומפוננטה AddVolunteer\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       {/* <Image source={require('./assets/logo.png')} style={styles.logo} /> */}\r\n//       <Image source={require('/images/logo.png')} style={styles.logo} />\r\n//       <Text style={styles.welcomeText}>ברוכים הבאים למתחברים למתנדבים</Text>\r\n//       <TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n//         <Text style={styles.buttonText}>התחבר</Text>\r\n//       </TouchableOpacity>\r\n//       <TouchableOpacity style={styles.button} onPress={handleCreateAccountPress}>\r\n//         <Text style={styles.buttonText}>יצירת חשבון</Text>\r\n//       </TouchableOpacity>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     flex: 1,\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     backgroundColor: '#FFFFFF',\r\n//   },\r\n//   logo: {\r\n//     width:200,\r\n//     height: 150,\r\n//     marginBottom: 20,\r\n//   },\r\n//   welcomeText: {\r\n//     fontSize: 20,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 30,\r\n//     color: '#000000',\r\n//   },\r\n//   button: {\r\n//     backgroundColor: '#FFC0CB',\r\n//     paddingVertical: 10,\r\n//     paddingHorizontal: 20,\r\n//     marginBottom: 10,\r\n//     borderRadius: 5,\r\n//   },\r\n//   buttonText: {\r\n//     fontSize: 16,\r\n//     color: '#FFFFFF',\r\n//   },\r\n// };\r\n\r\n// export default WelcomeScreen;\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n// import { checkUserInDatabase } from './components/checkUserInDatabase';\r\n// import { checkUserInDatabase } from './checkUserInDatabase';\r\nimport {checkTravel} from '../service'\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n\r\n  const handleLoginPress = () => {\r\n    checkTravel\r\nnavigation.navigate('VolunteerPersonalArea');\r\n    // checkUserInDatabase();\r\n    // בדיקה על שם המשתמש והמייל כנגד הנתונים במסד הנתונים\r\n    // כאן יש לממש את החיבור למסד הנתונים ואת הבדיקה בהתאם\r\n    // לדוגמה, נניח שיש לנו משתנה users המכיל את המשתמשים הקיימים במסד הנתונים\r\n    // אם השם משתמש והמייל נכונים, מעבר למסך AllMessages\r\n    // אחרת, הצגת התראה עם הודעת שגיאה\r\n    if (volunteers.some(volunteers => volunteer.password === password && volunteer.email === email)) {\r\n      // מעבר למסך AllMessages\r\n      navigation.navigate('RegistrationForm');\r\n\r\n      \r\n    } else {\r\n      Alert.alert('שגיאה', 'הסיסמא או המייל אינם נכונים');\r\n    }\r\n    // פונקציה שמתבצעת בעת לחיצה על כפתור ההתחברות\r\n  };\r\n\r\n  const handleCreateAccountPress = () => {\r\n    navigation.navigate('RegistrationForm');\r\n  \r\n    // פונקציה שמתבצעת בעת לחיצה על כפתור יצירת חשבון\r\n  };\r\n\r\n  const goToLanguageSelection = () => {\r\n    navigation.navigate('LanguageSelection', { name: 'English' });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <button onPress={goToLanguageSelection} title='go to LanguageSelection'/> */}\r\n\r\n      <TouchableOpacity style={styles.button} onPress={goToLanguageSelection}>\r\n        <Text style={styles.buttonText}>go to LanguageSelection</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Image source={require('/images/logo.png')} style={styles.logo} />\r\n      {/* <TextInput style={styles.input} placeholder=\"שם משתמש\" /> */}\r\n      <TextInput style={styles.input} placeholder=\"מייל\" />\r\n      <TextInput style={styles.input} placeholder=\"סיסמא\" />\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleLoginPress}>\r\n        <Text style={styles.buttonText}>התחבר</Text>\r\n      </TouchableOpacity>\r\n      <Text style={styles.noAccountText}>עדיין אין לך חשבון?</Text>\r\n      <TouchableOpacity style={styles.createAccountButton} onPress={handleCreateAccountPress}>\r\n        <Text style={styles.createAccountButtonText}>יצירת חשבון</Text>\r\n      </TouchableOpacity>\r\n\r\n{/* //בדיקת סיסמא ומייל */}\r\n        {/* checkCredentials(email, password); */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  logo: {\r\n    width: 300,\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '20%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#000000',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n  noAccountText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  createAccountButton: {\r\n    backgroundColor: '#FFC0CB',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  createAccountButtonText: {\r\n    fontSize: 16,\r\n    color: '#FFFFFF',\r\n  },\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"AAgEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AAGxD,SAAQC,WAAW;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAGxB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7BN,WAAW;IACfO,UAAU,CAACC,QAAQ,CAAC,uBAAuB,CAAC;IAOxC,IAAIC,UAAU,CAACC,IAAI,CAAC,UAAAD,UAAU;MAAA,OAAIE,SAAS,CAACC,QAAQ,KAAKA,QAAQ,IAAID,SAAS,CAACE,KAAK,KAAKA,KAAK;IAAA,EAAC,EAAE;MAE/FN,UAAU,CAACC,QAAQ,CAAC,kBAAkB,CAAC;IAGzC,CAAC,MAAM;MACLM,KAAK,CAACC,KAAK,CAAC,OAAO,EAAE,6BAA6B,CAAC;IACrD;EAEF,CAAC;EAED,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrCT,UAAU,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAGzC,CAAC;EAED,IAAMS,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClCV,UAAU,CAACC,QAAQ,CAAC,mBAAmB,EAAE;MAAEU,IAAI,EAAE;IAAU,CAAC,CAAC;EAC/D,CAAC;EAED,OACEd,KAAA,CAACV,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAG5BpB,IAAA,CAACJ,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAACC,OAAO,EAAEP,qBAAsB;MAAAK,QAAA,EACrEpB,IAAA,CAACP,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAH,QAAA,EAAC;MAAuB,CAAM;IAAC,CAC9C,CAAC,EAEnBpB,IAAA,CAACN,KAAK;MAAC8B,MAAM,EAAEC,OAAO,CAAC,kBAAkB,CAAE;MAACR,KAAK,EAAEC,MAAM,CAACQ;IAAK,CAAE,CAAC,EAElE1B,IAAA,CAACL,SAAS;MAACsB,KAAK,EAAEC,MAAM,CAACS,KAAM;MAACC,WAAW,EAAC;IAAM,CAAE,CAAC,EACrD5B,IAAA,CAACL,SAAS;MAACsB,KAAK,EAAEC,MAAM,CAACS,KAAM;MAACC,WAAW,EAAC;IAAO,CAAE,CAAC,EAEtD5B,IAAA,CAACJ,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAACC,OAAO,EAAElB,gBAAiB;MAAAgB,QAAA,EAChEpB,IAAA,CAACP,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAH,QAAA,EAAC;MAAK,CAAM;IAAC,CAC5B,CAAC,EACnBpB,IAAA,CAACP,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACW,aAAc;MAAAT,QAAA,EAAC;IAAmB,CAAM,CAAC,EAC7DpB,IAAA,CAACJ,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACY,mBAAoB;MAACR,OAAO,EAAER,wBAAyB;MAAAM,QAAA,EACrFpB,IAAA,CAACP,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACa,uBAAwB;QAAAX,QAAA,EAAC;MAAW,CAAM;IAAC,CAC/C,CAAC;EAAA,CAIf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG;EACbC,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EACnB,CAAC;EACDT,IAAI,EAAE;IACJU,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE;EAChB,CAAC;EACDX,KAAK,EAAE;IACLS,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVE,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,EAAE;IACrBJ,YAAY,EAAE;EAChB,CAAC;EACDjB,MAAM,EAAE;IACNc,eAAe,EAAE,SAAS;IAC1BQ,eAAe,EAAE,EAAE;IACnBD,iBAAiB,EAAE,EAAE;IACrBJ,YAAY,EAAE,EAAE;IAChBG,YAAY,EAAE;EAChB,CAAC;EACDlB,UAAU,EAAE;IACVqB,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDhB,aAAa,EAAE;IACbe,QAAQ,EAAE,EAAE;IACZN,YAAY,EAAE;EAChB,CAAC;EACDR,mBAAmB,EAAE;IACnBK,eAAe,EAAE,SAAS;IAC1BQ,eAAe,EAAE,EAAE;IACnBD,iBAAiB,EAAE,EAAE;IACrBD,YAAY,EAAE;EAChB,CAAC;EACDV,uBAAuB,EAAE;IACvBa,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT;AACF,CAAC;AAED,eAAe1C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}