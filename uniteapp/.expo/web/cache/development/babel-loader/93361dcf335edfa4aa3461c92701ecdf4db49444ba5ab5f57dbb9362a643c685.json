{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addItem, getById, getAll, updateItem } from \"./service\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    details = _useState2[0],\n    setDetails = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    request = _useState4[0],\n    setRequest = _useState4[1];\n  var getRequestHandler = function getRequestHandler() {\n    var response;\n    return _regeneratorRuntime.async(function getRequestHandler$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/fetchadata\"));\n        case 2:\n          response = _context.sent;\n          setDetails(response.data.details);\n          setRequest(\"GET\");\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsxs(\"div\", {\n    className: \"App\",\n    children: [_jsx(\"h1\", {\n      children: \"My Site\"\n    }), _jsx(\"button\", {\n      onClick: function onClick() {\n        return getAll('http://localhost:3001/ravkav');\n      },\n      children: \"connect to node that works!\\uD83D\\uDE02\\uD83D\\uDE01\"\n    }), _jsx(\"hr\", {}), request === \"GET\" ? _jsx(\"span\", {\n      data: details\n    }) : None]\n  });\n}\nexport default App;","map":{"version":3,"names":["addItem","getById","getAll","updateItem","React","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","request","setRequest","getRequestHandler","response","_regeneratorRuntime","async","getRequestHandler$","_context","prev","next","awrap","axios","get","sent","data","stop","Promise","className","children","onClick","None"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["// import { StatusBar } from 'expo-status-bar';\n// import { StyleSheet, Text, View } from 'react-native';\n// import Log from './Log'\n// // import React from 'react';\n// import Connect from './Connect';\n// import RegistrationForm from './RegistrationForm';\n// import { Image } from '@react-navigation/native';\n// import Chart from './Chart';\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// // import \"./App.css\";\n\n// function App() {\n//   const [message, setMessage] = useState(\"\");\n\n//   // useEffect(() => {\n//   //   fetch(\"http://localhost:8000/message\")\n//   //     .then((res) => res.json())\n//   //     .then((data) => setMessage(data.message));\n//   // }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>{message}</h1>\n//     </div>\n//   );\n// }\n\n// export default App\n\n\n// // const App = () => {\n// //   return (\n// //     <View style={styles.container}>\n// //       {/* <Text>Open up App.js to start working on your app!</Text>  */}\n// //       <RegistrationForm />\n// //       <StatusBar style=\"auto\" />\n// //     </View>\n// //   );\n// // }\n// // export default App;\n\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\nimport { addItem, getById, getAll, updateItem } from './service'\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [details, setDetails] = useState([]);\n  const [request, setRequest] = useState();\n  const getRequestHandler = async () => {\n    const response = await axios.get(\"http://localhost:5000/fetchadata\");\n    setDetails(response.data.details);\n    setRequest(\"GET\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>My Site</h1>\n      <button onClick={() => getAll('http://localhost:3001/ravkav')} >connect to node that works!üòÇüòÅ</button>\n      <hr />\n      {request === \"GET\" ? <span data={details} ></span> : None}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAsDA,SAASA,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,IAAAC,SAAA,GAA8BN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BX,QAAQ,CAAC,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;IAAA,IAAAC,QAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,mBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACEC,KAAK,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAAA;UAA9DT,QAAQ,GAAAI,QAAA,CAAAM,IAAA;UACdhB,UAAU,CAACM,QAAQ,CAACW,IAAI,CAAClB,OAAO,CAAC;UACjCK,UAAU,CAAC,KAAK,CAAC;QAAC;QAAA;UAAA,OAAAM,QAAA,CAAAQ,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CACnB;EACD,OACEzB,KAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,GAClB7B,IAAA;MAAA6B,QAAA,EAAI;IAAO,CAAI,CAAC,EAChB7B,IAAA;MAAQ8B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMnC,MAAM,CAAC,8BAA8B,CAAC;MAAA,CAAC;MAAAkC,QAAA,EAAE;IAA+B,CAAQ,CAAC,EACxG7B,IAAA,SAAK,CAAC,EACLW,OAAO,KAAK,KAAK,GAAGX,IAAA;MAAMyB,IAAI,EAAElB;IAAQ,CAAQ,CAAC,GAAGwB,IAAI;EAAA,CACtD,CAAC;AAEV;AAEA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}