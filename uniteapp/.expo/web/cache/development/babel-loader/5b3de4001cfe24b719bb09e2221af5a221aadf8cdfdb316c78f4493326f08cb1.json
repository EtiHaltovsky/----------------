{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar getAllVolunteers = function getAllVolunteers(url) {\n  axios.get(url).then(function (response) {\n    console.log(\"Success!!!!!!!!\", response);\n  });\n};\nvar getAll = function getAll(url) {\n  axios.get(url).then(function (response) {\n    console.log(\"Success!!!!!!!!\", response);\n  });\n};\nvar getData = function getData(url) {\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        axios.get(\"\" + url).then(function (data) {\n          return console.log(data.data);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n};\nvar getById = function getById(url, userId) {\n  return axios.get(url + \"/\" + userId);\n};\nvar addItem = function addItem(url, obj) {\n  return axios.post(url, obj);\n};\nvar updateItem = function updateItem(url, userId, obj) {\n  return axios.patch(url + \"/\" + userId, obj);\n};\nexport var addVolunteer = function addVolunteer(url, volunteer) {\n  var response;\n  return _regeneratorRuntime.async(function addVolunteer$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, volunteer));\n      case 3:\n        response = _context2.sent;\n        console.log(response.data);\n        _context2.next = 10;\n        break;\n      case 7:\n        _context2.prev = 7;\n        _context2.t0 = _context2[\"catch\"](0);\n        console.error(_context2.t0);\n      case 10:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var addUser = function addUser(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function addUser$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _context3.prev = 0;\n        _context3.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context3.sent;\n        console.log(response.data);\n        _context3.next = 10;\n        break;\n      case 7:\n        _context3.prev = 7;\n        _context3.t0 = _context3[\"catch\"](0);\n        console.error(_context3.t0);\n      case 10:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var updateVolunteer = function updateVolunteer(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function updateVolunteer$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.prev = 0;\n        _context4.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context4.sent;\n        console.log(response.data);\n        _context4.next = 10;\n        break;\n      case 7:\n        _context4.prev = 7;\n        _context4.t0 = _context4[\"catch\"](0);\n        console.error(_context4.t0);\n      case 10:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var deleteVolunteer = function deleteVolunteer(url, user) {\n  var response;\n  return _regeneratorRuntime.async(function deleteVolunteer$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        _context5.prev = 0;\n        _context5.next = 3;\n        return _regeneratorRuntime.awrap(axios.post(\"\" + url, user));\n      case 3:\n        response = _context5.sent;\n        console.log(response.data);\n        _context5.next = 10;\n        break;\n      case 7:\n        _context5.prev = 7;\n        _context5.t0 = _context5[\"catch\"](0);\n        console.error(_context5.t0);\n      case 10:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport { addItem, getById, getAllVolunteers, getData, updateItem, getAll };\nexport default addVolunteer;","map":{"version":3,"names":["axios","getAllVolunteers","url","get","then","response","console","log","getAll","getData","_regeneratorRuntime","async","getData$","_context","prev","next","data","catch","error","stop","Promise","getById","userId","addItem","obj","post","updateItem","patch","addVolunteer","volunteer","addVolunteer$","_context2","awrap","sent","t0","addUser","user","addUser$","_context3","updateVolunteer","updateVolunteer$","_context4","deleteVolunteer","deleteVolunteer$","_context5"],"sources":["C:/Users/This_user/final project eti/uniteapp/service.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\n// app.get('/', myController.get);\r\n// app.post('/', myController.post);\r\n// app.put('/:id', myController.put);\r\n// app.delete('/:id', myController.delete);\r\n\r\nconst getAllVolunteers = (url) => { \r\n    axios.get(url)\r\n    .then((response) => { console.log(\"Success!!!!!!!!\",response)\r\n    // .catch((error) => { console.log(error)})\r\n    })\r\n};\r\n\r\n\r\n\r\n// const fetchData = async () => {\r\n//     try {\r\n//       const response = await fetch('https://api.example.com/data');\r\n//       const jsonData = await response.json();\r\n//       setData(jsonData);\r\n//     } catch (error) {\r\n//       console.log('Error fetching data:', error);\r\n//     }\r\n//   };\r\n\r\nconst getAll = (url) => { \r\n    axios.get(url)\r\n    .then((response) => { console.log(\"Success!!!!!!!!\",response)\r\n    // .catch((error) => { console.log(error)})\r\n    })\r\n};\r\n// export const getData = async (url) =&gt; {\r\n//         axios\r\n// //             .get(`${url}`)\r\n// //             .then(data =&gt; console.log(data.data))\r\n// //             .catch(error =&gt; console.log(error));\r\n//     };\r\n\r\n    //Get data\r\n const getData = async (url) => {\r\n    axios\r\n        .get(`${url}`)\r\n        .then(data => console.log(data.data))\r\n        .catch(error => console.log(error));\r\n};\r\n\r\nconst getById = (url, userId) => axios.get(`${url}/${userId}`);\r\n\r\nconst addItem = (url, obj) => axios.post(url, obj);\r\n\r\nconst updateItem = (url, userId, obj) => axios.patch(`${url}/${userId}`, obj);\r\n\r\n\r\n\r\nexport const addVolunteer = async (url, volunteer) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, volunteer);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nexport const addUser = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport const updateVolunteer = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteVolunteer = async (url, user) => {\r\n    try {\r\n        const response = await axios.post(`${url}`, user);\r\n        console.log(response.data);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n// export const addItem = async (url, obj) => {\r\n//     const user = await axios.post(\"https://jsonplaceholder.typicode.com/users\", obj)\r\n//     console.log(\"user\", user)\r\n// };\r\n\r\n\r\n\r\n// export const checkDriver = async (url, driver) => {\r\n//     try {\r\n//         const response = await axios.post(`${url}`, driver);\r\n//         console.log(response.data);\r\n//     } catch (error) {\r\n//         console.error(error);\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport { addItem, getById, getAllVolunteers,getData, updateItem,getAll };\r\n\r\nexport default addVolunteer;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}