{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport mongoose from 'mongoose';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nmongoose.connect('mongodb://localhost/myapp');\nvar volunteerSchema = new mongoose.Schema({\n  type: String,\n  location: String,\n  from: String,\n  to: String,\n  date: Date,\n  day: String\n});\nvar Volunteer = mongoose.model('Volunteer', volunteerSchema);\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    volunteer = _useState2[0],\n    setVolunteer = _useState2[1];\n  useEffect(function () {\n    Volunteer.findOne({\n      type: 'transportation',\n      location: 'Ashdod',\n      to: 'Asuta Hospital',\n      date: '2023-02-16',\n      day: 'Tuesday'\n    }, function (err, result) {\n      if (err) {\n        console.error(err);\n      } else {\n        setVolunteer(result);\n      }\n    });\n  }, []);\n  return _jsx(View, {\n    children: volunteer ? _jsx(Text, {\n      children: \"We need transportation from \" + volunteer.from + \" to \" + volunteer.to + \" at \" + volunteer.date.toLocaleTimeString() + \" on \" + volunteer.day + \", \" + volunteer.date.toLocaleDateString() + \".\"\n    }) : _jsx(Text, {\n      children: \"Loading...\"\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Text","View","mongoose","jsx","_jsx","connect","volunteerSchema","Schema","type","String","location","from","to","date","Date","day","Volunteer","model","App","_useState","_useState2","_slicedToArray","volunteer","setVolunteer","findOne","err","result","console","error","children","toLocaleTimeString","toLocaleDateString"],"sources":["C:/Users/This_user/final project eti/uniteapp/components/HelpMassage.js"],"sourcesContent":["// import React from 'react';\r\n// import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\n// const HelpMassage = () => {\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.message}>צריכים הסעה מאשדוד הלל 8 לבית החולים אסותא אשדוד בשעה 16:15 יום שלישי 16/02/2023</Text>\r\n//       <View style={styles.buttonContainer}>\r\n//       <TouchableOpacity style={styles.rejectButton}>\r\n//           <Text style={styles.buttonText}>דחייה</Text>\r\n//         </TouchableOpacity>\r\n//         <TouchableOpacity style={styles.acceptButton}>\r\n//           <Text style={styles.buttonText}>אישור</Text>\r\n//         </TouchableOpacity>\r\n      \r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     backgroundColor: '#F0F8FF',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     margin: 10,\r\n//     alignItems: 'center'\r\n//   },\r\n//   message: {\r\n//     fontSize: 20,\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//     color: '#4B0082'\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-around',\r\n//     marginTop: 10\r\n//   },\r\n//   acceptButton: {\r\n//     backgroundColor: '#00CED1',\r\n//     padding: 10,\r\n//     borderRadius: 10,\r\n//     width: 120,\r\n//     alignItems: 'center'\r\n//   },\r\n//   rejectButton: {\r\n//     backgroundColor: '#FF6347',\r\n//     padding: 10,\r\n//     borderRadius: 10,\r\n//     width: 120,\r\n//     alignItems: 'center'\r\n//   },\r\n//   buttonText: {\r\n//     color: '#FFFFFF',\r\n//     fontWeight: 'bold',\r\n//     fontSize: 16\r\n//   }\r\n// });\r\n\r\n// export default HelpMassage;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport mongoose from 'mongoose';\r\n\r\n// Connect to MongoDB\r\nmongoose.connect('mongodb://localhost/myapp');\r\n\r\n// Define volunteer schema\r\nconst volunteerSchema = new mongoose.Schema({\r\n  type: String,\r\n  location: String,\r\n  from: String,\r\n  to: String,\r\n  date: Date,\r\n  day: String,\r\n});\r\n\r\n// Create volunteer model\r\nconst Volunteer = mongoose.model('Volunteer', volunteerSchema);\r\n\r\nexport default function App() {\r\n  const [volunteer, setVolunteer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Find a volunteer from the database\r\n    Volunteer.findOne({ type: 'transportation', location: 'Ashdod', to: 'Asuta Hospital', date: '2023-02-16', day: 'Tuesday' }, (err, result) => {\r\n      if (err) {\r\n        console.error(err);\r\n      } else {\r\n        setVolunteer(result);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      {volunteer ? (\r\n        <Text>{`We need transportation from ${volunteer.from} to ${volunteer.to} at ${volunteer.date.toLocaleTimeString()} on ${volunteer.day}, ${volunteer.date.toLocaleDateString()}.`}</Text>\r\n      ) : (\r\n        <Text>Loading...</Text>\r\n      )}\r\n    </View>\r\n  );\r\n}"],"mappings":";AA8DA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,QAAQ,MAAM,UAAU;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGhCF,QAAQ,CAACG,OAAO,CAAC,2BAA2B,CAAC;AAG7C,IAAMC,eAAe,GAAG,IAAIJ,QAAQ,CAACK,MAAM,CAAC;EAC1CC,IAAI,EAAEC,MAAM;EACZC,QAAQ,EAAED,MAAM;EAChBE,IAAI,EAAEF,MAAM;EACZG,EAAE,EAAEH,MAAM;EACVI,IAAI,EAAEC,IAAI;EACVC,GAAG,EAAEN;AACP,CAAC,CAAC;AAGF,IAAMO,SAAS,GAAGd,QAAQ,CAACe,KAAK,CAAC,WAAW,EAAEX,eAAe,CAAC;AAE9D,eAAe,SAASY,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAkCrB,QAAQ,CAAC,IAAI,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9BrB,SAAS,CAAC,YAAM;IAEdiB,SAAS,CAACQ,OAAO,CAAC;MAAEhB,IAAI,EAAE,gBAAgB;MAAEE,QAAQ,EAAE,QAAQ;MAAEE,EAAE,EAAE,gBAAgB;MAAEC,IAAI,EAAE,YAAY;MAAEE,GAAG,EAAE;IAAU,CAAC,EAAE,UAACU,GAAG,EAAEC,MAAM,EAAK;MAC3I,IAAID,GAAG,EAAE;QACPE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC;MACpB,CAAC,MAAM;QACLF,YAAY,CAACG,MAAM,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEtB,IAAA,CAACH,IAAI;IAAA4B,QAAA,EACFP,SAAS,GACRlB,IAAA,CAACJ,IAAI;MAAA6B,QAAA,mCAAiCP,SAAS,CAACX,IAAI,YAAOW,SAAS,CAACV,EAAE,YAAOU,SAAS,CAACT,IAAI,CAACiB,kBAAkB,CAAC,CAAC,YAAOR,SAAS,CAACP,GAAG,UAAKO,SAAS,CAACT,IAAI,CAACkB,kBAAkB,CAAC,CAAC;IAAA,CAAU,CAAC,GAExL3B,IAAA,CAACJ,IAAI;MAAA6B,QAAA,EAAC;IAAU,CAAM;EACvB,CACG,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}