{"ast":null,"code":"import { addItem, getById, getAll, updateItem, addVolunteer } from \"./service\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Connect from \"./components/Connect\";\nimport HelpMassage from \"./components/HelpMassage\";\nimport FormComponent from \"./components/FormComponent\";\nimport VolunteeringInTherapy from \"./components/VolunteeringInTherapy\";\nimport AddVolunteer from \"./components/AddVolunteer\";\nimport SignupScreen from \"./src/screens/SignupScreen\";\nimport VolunteerComponent from \"./components/VolunteerComponent\";\nimport AddRecipient from \"./components/AddRecipient\";\nimport Retrieve from \"./components/Retrieve\";\nimport Table from \"./components/Table\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport MyComponent from \"./components/MyComponent\";\nimport RequestRecipient from \"./components/RequestRecipient\";\nimport HelpRequestForm from \"./components/HelpRequestForm\";\nimport EmailClient from \"./components/EmailClient\";\nimport LanguageSelection from \"./components/LanguageSelection \";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport AppReducer from \"./src/reducers\";\nimport AppNavigator from \"./src/navigations/AppNavigation\";\nimport AllMessage from \"./components/AllMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        children: _jsx(Stack.Screen, {\n          name: \"EmailClient\",\n          component: EmailClient\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["addItem","getById","getAll","updateItem","addVolunteer","React","useState","useEffect","axios","StyleSheet","Text","View","Connect","HelpMassage","FormComponent","VolunteeringInTherapy","AddVolunteer","SignupScreen","VolunteerComponent","AddRecipient","Retrieve","Table","LoginScreen","RegistrationForm","MyComponent","RequestRecipient","HelpRequestForm","EmailClient","LanguageSelection","NavigationContainer","createStackNavigator","createNativeStackNavigator","AppRegistry","thunk","Provider","createStore","applyMiddleware","AppReducer","AppNavigator","AllMessage","jsx","_jsx","Stack","App","style","styles","container","children","Navigator","Screen","name","component","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["import { addItem, getById, getAll, updateItem, addVolunteer } from './service'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\n// import LoginScreen from '../uniteapp/login-screen/src/login/login';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Connect from './components/Connect';\r\nimport HelpMassage from './components/HelpMassage';\r\nimport FormComponent from './components/FormComponent';\r\nimport VolunteeringInTherapy from './components/VolunteeringInTherapy';\r\nimport AddVolunteer from './components/AddVolunteer';\r\nimport SignupScreen from './src/screens/SignupScreen';\r\nimport VolunteerComponent from './components/VolunteerComponent'\r\nimport AddRecipient from './components/AddRecipient';\r\nimport Retrieve from './components/Retrieve'\r\nimport Table from './components/Table'\r\nimport LoginScreen from './components/LoginScreen'\r\nimport RegistrationForm from './components/RegistrationForm'\r\nimport MyComponent from './components/MyComponent'\r\nimport RequestRecipient from './components/RequestRecipient'\r\nimport HelpRequestForm from './components/HelpRequestForm'\r\nimport EmailClient from './components/EmailClient'\r\nimport LanguageSelection from './components/LanguageSelection '\r\n// import PersonalArea  from './components/PersonalArea '\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\nimport { AppRegistry } from 'react-native';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport AppReducer from './src/reducers';\r\nimport AppNavigator from './src/navigations/AppNavigation';\r\nimport AllMessage from './components/AllMessage';\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n    <View style={styles.container}>\r\n    \r\n        <NavigationContainer>\r\n          <Stack.Navigator>\r\n            {/* <Stack.Screen name=\"RegistrationForm \" component={RegistrationForm } />\r\n            <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n            <Stack.Screen name=\"HelpRequestForm\" component={HelpRequestForm} /> */}\r\n            <Stack.Screen name=\"EmailClient\" component={EmailClient} />\r\n\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n    </View>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Stack = createNativeStackNavigator();\r\n// console.disableYellowBox = true;\r\n\r\n// function StarterApp() {\r\n//   const [details, setDetails] = useState([]);//שיכניס את הנתונים למערך - בעצם שיכניס למשתנה את כל האוביקט\r\n//   const [request, setRequest] = useState();//משתנה כדי לוודא האם היתה גישה לסרוויס\r\n//   const [currentUserID, setCurrentUserID] = useState('');\r\n\r\n\r\n//   useEffect(() => {\r\n//     // Simulating the retrieval of the current user's ID\r\n//     setCurrentUserID('222222222');\r\n//   }, []);\r\n\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n\r\n//       <View>\r\n\r\n           \r\n//       <NavigationContainer>\r\n//       <Stack.Navigator>\r\n//         <Stack.Screen\r\n//           name=\"/LanguageSelection\"\r\n//           component={LanguageSelection}\r\n//           options={{title: 'Welcome'}}\r\n//         />\r\n//         {/* <Stack.Screen name=\"Profile\" component={ProfileScreen} /> */}\r\n//       </Stack.Navigator>\r\n//     </NavigationContainer>\r\n     \r\n//         {/* <AddVolunteer /> */}\r\n//         {/* <AddRecipient /> */}\r\n//         {/* {currentUserID === '222222222' ? (\r\n//         <HelpMassage />\r\n//       ) : (\r\n//         <Text>You do not have permission to access this component</Text>\r\n//       )} */}\r\n//         {/* <HelpMassage/> */}\r\n//         {/* <HelpRequestForm/> */}\r\n//         {/* <VolunteeringInTherapy /> */}\r\n//         {/* < BenodProvider > */}\r\n//         {/* <Retrieve/> */}\r\n//         {/* <Table/> */}\r\n//         {/* <MyComponent/> */}\r\n//         {/* <PersonalArea/> */}\r\n//         {/* <RequestRecipient/> */}\r\n//         {/* <RegistrationForm user = {volunteerId}/> */}\r\n//         {/* <LoginScreen/> */}\r\n//         {/* <AllMessage /> */}\r\n//         <LanguageSelection />\r\n//         {/* <VolunteerComponent /> */}\r\n//         {/* </BenodProvider> */}\r\n//         {/* נותנת למשתמש לבחור מה הדירוג שלו לכל דבר */}\r\n//         {/* <FormComponent/> */}\r\n//         {/* <try/> */}\r\n//         {/* <StatusBar style=\"auto\" /> */}\r\n//         {/* <Provider store={store}> */}\r\n//           {/* <AppNavigator /> */}\r\n//           {/* <SignupScreen/> */}\r\n\r\n//         {/* </Provider> */}\r\n//       </View>\r\n//     </div>\r\n\r\n//   );\r\n// }\r\n\r\n// // AppRegistry.registerComponent('rn_starter_kit', () => StarterApp);\r\n\r\n// export default StarterApp;\r\n\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,YAAY;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGzB,OAAOC,OAAO;AACd,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,qBAAqB;AAC5B,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,kBAAkB;AACzB,OAAOC,YAAY;AACnB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AACvB,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AACvB,OAAOC,eAAe;AACtB,OAAOC,WAAW;AAClB,OAAOC,iBAAiB;AAGxB,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAAQC,0BAA0B,QAAO,gCAAgC;AAAC,OAAAC,WAAA;AAG1E,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAEpD,OAAOC,UAAU;AACjB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAGjD,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5B,OAEEF,IAAA,CAAC9B,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE1BN,IAAA,CAACZ,mBAAmB;MAAAkB,QAAA,EAClBN,IAAA,CAACC,KAAK,CAACM,SAAS;QAAAD,QAAA,EAIdN,IAAA,CAACC,KAAK,CAACO,MAAM;UAACC,IAAI,EAAC,aAAa;UAACC,SAAS,EAAExB;QAAY,CAAE;MAAC,CAE5C;IAAC,CACC;EAAC,CACpB,CAAC;AAGX;AAEA,IAAMkB,MAAM,GAAGpC,UAAU,CAAC2C,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}