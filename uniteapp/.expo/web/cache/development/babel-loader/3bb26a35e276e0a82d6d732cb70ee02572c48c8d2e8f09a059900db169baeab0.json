{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Connection from \"./Connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ConnectingForVolunteers = function ConnectingForVolunteers() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: require(\"./Desktop/1.png\"),\n        style: styles.image,\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.button, styles.leftButton],\n        onPress: function onPress() {\n          return handleButtonClick('create');\n        },\n        children: _jsx(Text, {\n          style: [styles.buttonText, styles.leftButtonText],\n          children: \"\\u05D9\\u05E6\\u05D9\\u05E8\\u05EA \\u05D7\\u05E9\\u05D1\\u05D5\\u05DF\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, styles.rightButton],\n        onPress: function onPress() {\n          return handleButtonClick('connection');\n        },\n        children: _jsx(Text, {\n          style: [styles.buttonText, styles.rightButtonText],\n          children: \"\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\"\n        })\n      }), activeButton === 'connection' && _jsx(Connection, {}), activeButton === 'create' && _jsx(Create, {})]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imageContainer: {\n    backgroundColor: '#007AFF',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  image: {\n    width: 200,\n    height: 100\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  button: {\n    padding: 10,\n    borderRadius: 5,\n    marginHorizontal: 10\n  },\n  leftButton: {\n    backgroundColor: '#32CD32',\n    borderWidth: 2,\n    borderColor: '#32CD32'\n  },\n  leftButtonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  rightButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#FF0000'\n  },\n  rightButtonText: {\n    color: '#FF0000',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ConnectingForVolunteers;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Image","Connection","jsx","_jsx","jsxs","_jsxs","ConnectingForVolunteers","style","styles","container","children","imageContainer","source","require","image","resizeMode","buttonContainer","button","leftButton","onPress","handleButtonClick","buttonText","leftButtonText","rightButton","rightButtonText","activeButton","Create","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","marginBottom","width","height","flexDirection","marginHorizontal","borderWidth","borderColor","color","fontSize","fontWeight"],"sources":["C:/Users/This_user/final project eti/uniteapp/Log.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\r\nimport Connection from './Connection'\r\n\r\nconst ConnectingForVolunteers = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.imageContainer}>\r\n        <Image\r\n          source={require('./Desktop/1.png')}\r\n          style={styles.image}\r\n          resizeMode=\"contain\"\r\n        />\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={[styles.button, styles.leftButton]} onPress={() => handleButtonClick('create')}>\r\n          <Text style={[styles.buttonText, styles.leftButtonText]}>יצירת חשבון</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={[styles.button, styles.rightButton]} onPress={() => handleButtonClick('connection')}>\r\n          <Text style={[styles.buttonText, styles.rightButtonText]}>התחבר</Text>\r\n        </TouchableOpacity>\r\n        {activeButton === 'connection' && <Connection />}\r\n        {activeButton === 'create' && <Create />}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  imageContainer: {\r\n    backgroundColor: '#007AFF',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 100,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginHorizontal: 10,\r\n  },\r\n  leftButton: {\r\n    backgroundColor: '#32CD32',\r\n    borderWidth: 2,\r\n    borderColor: '#32CD32',\r\n  },\r\n  leftButtonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  rightButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderWidth: 2,\r\n    borderColor: '#FF0000',\r\n  },\r\n  rightButtonText: {\r\n    color: '#FF0000',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ConnectingForVolunteers;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}