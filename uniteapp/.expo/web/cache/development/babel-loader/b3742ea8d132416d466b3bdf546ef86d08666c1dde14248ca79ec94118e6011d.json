{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nconsole.disableYellowBox = true;\nfunction StarterApp() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    details = _useState2[0],\n    setDetails = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    request = _useState4[0],\n    setRequest = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUserID = _useState6[0],\n    setCurrentUserID = _useState6[1];\n  useEffect(function () {\n    setCurrentUserID('222222222');\n  }, []);\n  return _jsx(\"div\", {\n    className: \"App\",\n    children: _jsxs(View, {\n      children: [_jsx(NavigationContainer, {\n        children: _jsx(Stack.Navigator, {\n          children: _jsx(Stack.Screen, {\n            name: \"/LanguageSelection\",\n            component: LanguageSelection,\n            options: {\n              title: 'Welcome'\n            }\n          })\n        })\n      }), _jsx(LoginScreen, {})]\n    })\n  });\n}\nexport default StarterApp;","map":{"version":3,"names":["Stack","createNativeStackNavigator","console","disableYellowBox","StarterApp","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","request","setRequest","_useState5","_useState6","currentUserID","setCurrentUserID","useEffect","_jsx","className","children","_jsxs","View","NavigationContainer","Navigator","Screen","name","component","LanguageSelection","options","title","LoginScreen"],"sources":["C:/Users/This_user/final project eti/uniteapp/App.js"],"sourcesContent":["// import { addItem, getById, getAll, updateItem, addVolunteer } from './service'\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from 'axios'\r\n// // import LoginScreen from '../uniteapp/login-screen/src/login/login';\r\n// import { StyleSheet, Text, View } from 'react-native';\r\n// import Connect from './components/Connect';\r\n// import HelpMassage from './components/HelpMassage';\r\n// import FormComponent from './components/FormComponent';\r\n// import VolunteeringInTherapy from './components/VolunteeringInTherapy';\r\n// import AddVolunteer from './components/AddVolunteer';\r\n// import SignupScreen from './src/screens/SignupScreen';\r\n// import VolunteerComponent from './components/VolunteerComponent'\r\n// import AddRecipient from './components/AddRecipient';\r\n// import Retrieve from './components/Retrieve'\r\n// import Table from './components/Table'\r\n// import LoginScreen from './components/LoginScreen'\r\n// import RegistrationForm from './components/RegistrationForm'\r\n// import MyComponent from './components/MyComponent'\r\n// import RequestRecipient from './components/RequestRecipient'\r\n// import HelpRequestForm from './components/HelpRequestForm'\r\n// import EmailClient from './components/EmailClient'\r\n// import LanguageSelection from './components/LanguageSelection '\r\n// // import PersonalArea  from './components/PersonalArea '\r\n\r\n// import {NavigationContainer} from '@react-navigation/native';\r\n// import { createStackNavigator } from '@react-navigation/stack';\r\n// import {createNativeStackNavigator} from '@react-navigation/native-stack';\r\n\r\n// import { AppRegistry } from 'react-native';\r\n// import thunk from 'redux-thunk';\r\n// import { Provider } from 'react-redux';\r\n// import { createStore, applyMiddleware } from 'redux';\r\n\r\n// import AppReducer from './src/reducers';\r\n// import AppNavigator from './src/navigations/AppNavigation';\r\n// import AllMessage from './components/AllMessage';\r\n\r\n\r\n// const Stack = createStackNavigator();\r\n\r\n// export default function App() {\r\n//   return (\r\n\r\n//     <View style={styles.container}>\r\n    \r\n//         <NavigationContainer>\r\n//           <Stack.Navigator>\r\n//             {/* <Stack.Screen name=\"RegistrationForm \" component={RegistrationForm } />\r\n//             <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n//             <Stack.Screen name=\"HelpRequestForm\" component={HelpRequestForm} /> */}\r\n//             <Stack.Screen name=\"EmailClient\" component={EmailClient} />\r\n\r\n//           </Stack.Navigator>\r\n//         </NavigationContainer>\r\n//     </View>\r\n\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#fff',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconsole.disableYellowBox = true;\r\n\r\nfunction StarterApp() {\r\n  const [details, setDetails] = useState([]);//שיכניס את הנתונים למערך - בעצם שיכניס למשתנה את כל האוביקט\r\n  const [request, setRequest] = useState();//משתנה כדי לוודא האם היתה גישה לסרוויס\r\n  const [currentUserID, setCurrentUserID] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    // Simulating the retrieval of the current user's ID\r\n    setCurrentUserID('222222222');\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <View>\r\n\r\n           \r\n      <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"/LanguageSelection\"\r\n          component={LanguageSelection}\r\n          options={{title: 'Welcome'}}\r\n        />\r\n        {/* <Stack.Screen name=\"Profile\" component={ProfileScreen} /> */}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n     \r\n        {/* <AddVolunteer /> */}\r\n        {/* <AddRecipient /> */}\r\n        {/* {currentUserID === '222222222' ? (\r\n        <HelpMassage />\r\n      ) : (\r\n        <Text>You do not have permission to access this component</Text>\r\n      )} */}\r\n        {/* <HelpMassage/> */}\r\n        {/* <HelpRequestForm/> */}\r\n        {/* <VolunteeringInTherapy /> */}\r\n        {/* < BenodProvider > */}\r\n        {/* <Retrieve/> */}\r\n        {/* <Table/> */}\r\n        {/* <MyComponent/> */}\r\n        {/* <PersonalArea/> */}\r\n        {/* <RequestRecipient/> */}\r\n        {/* <RegistrationForm user = {volunteerId}/> */}\r\n        <LoginScreen/>\r\n        {/* <AllMessage /> */}\r\n        {/* <LanguageSelection /> */}\r\n        {/* <VolunteerComponent /> */}\r\n        {/* </BenodProvider> */}\r\n        {/* נותנת למשתמש לבחור מה הדירוג שלו לכל דבר */}\r\n        {/* <FormComponent/> */}\r\n        {/* <try/> */}\r\n        {/* <StatusBar style=\"auto\" /> */}\r\n        {/* <Provider store={store}> */}\r\n          {/* <AppNavigator /> */}\r\n          {/* <SignupScreen/> */}\r\n\r\n        {/* </Provider> */}\r\n      </View>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n// AppRegistry.registerComponent('rn_starter_kit', () => StarterApp);\r\n\r\nexport default StarterApp;\r\n"],"mappings":";;;AA8FA,IAAMA,KAAK,GAAGC,0BAA0B,CAAC,CAAC;AAC1CC,OAAO,CAACC,gBAAgB,GAAG,IAAI;AAE/B,SAASC,UAAUA,CAAA,EAAG;EACpB,IAAAC,SAAA,GAA8BC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAnCI,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BL,QAAQ,CAAC,CAAC;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0CT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAGtCG,SAAS,CAAC,YAAM;IAEdD,gBAAgB,CAAC,WAAW,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAGN,OACEE,IAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAElBC,KAAA,CAACC,IAAI;MAAAF,QAAA,GAGLF,IAAA,CAACK,mBAAmB;QAAAH,QAAA,EACpBF,IAAA,CAACpB,KAAK,CAAC0B,SAAS;UAAAJ,QAAA,EACdF,IAAA,CAACpB,KAAK,CAAC2B,MAAM;YACXC,IAAI,EAAC,oBAAoB;YACzBC,SAAS,EAAEC,iBAAkB;YAC7BC,OAAO,EAAE;cAACC,KAAK,EAAE;YAAS;UAAE,CAC7B;QAAC,CAEa;MAAC,CACC,CAAC,EAmBlBZ,IAAA,CAACa,WAAW,IAAC,CAAC;IAAA,CAcV;EAAC,CACJ,CAAC;AAGV;AAIA,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}